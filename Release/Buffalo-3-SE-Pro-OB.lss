
Buffalo-3-SE-Pro-OB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000812  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000812  000008a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000008a6  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000008a6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000008b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000047a  00000000  00000000  00000978  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000078  00000000  00000000  00000df2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000026e  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	ac 36       	cpi	r26, 0x6C	; 108
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	31 d1       	rcall	.+610    	; 0x29e <main>
  3c:	e8 c3       	rjmp	.+2000   	; 0x80e <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <cmp_chars>:
  40:	fc 01       	movw	r30, r24
  42:	80 81       	ld	r24, Z
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	fb 01       	movw	r30, r22
  48:	20 81       	ld	r18, Z
  4a:	82 1b       	sub	r24, r18
  4c:	91 09       	sbc	r25, r1
  4e:	08 95       	ret

00000050 <i2cSendByte>:
  50:	0f 93       	push	r16
  52:	1f 93       	push	r17
  54:	cf 93       	push	r28
  56:	df 93       	push	r29
  58:	1f 92       	push	r1
  5a:	cd b7       	in	r28, 0x3d	; 61
  5c:	de b7       	in	r29, 0x3e	; 62
  5e:	08 2f       	mov	r16, r24
  60:	14 2f       	mov	r17, r20
  62:	80 2f       	mov	r24, r16
  64:	69 83       	std	Y+1, r22	; 0x01
  66:	81 d1       	rcall	.+770    	; 0x36a <i2c_start>
  68:	69 81       	ldd	r22, Y+1	; 0x01
  6a:	81 11       	cpse	r24, r1
  6c:	fa cf       	rjmp	.-12     	; 0x62 <i2cSendByte+0x12>
  6e:	86 2f       	mov	r24, r22
  70:	6e d1       	rcall	.+732    	; 0x34e <i2c_write>
  72:	81 2f       	mov	r24, r17
  74:	6c d1       	rcall	.+728    	; 0x34e <i2c_write>
  76:	0f 90       	pop	r0
  78:	df 91       	pop	r29
  7a:	cf 91       	pop	r28
  7c:	1f 91       	pop	r17
  7e:	0f 91       	pop	r16
  80:	51 c1       	rjmp	.+674    	; 0x324 <i2c_stop>

00000082 <i2cReceiveByte>:
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	1f 92       	push	r1
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	18 2f       	mov	r17, r24
  90:	81 2f       	mov	r24, r17
  92:	69 83       	std	Y+1, r22	; 0x01
  94:	6a d1       	rcall	.+724    	; 0x36a <i2c_start>
  96:	69 81       	ldd	r22, Y+1	; 0x01
  98:	88 23       	and	r24, r24
  9a:	39 f0       	breq	.+14     	; 0xaa <i2cReceiveByte+0x28>
  9c:	8f ec       	ldi	r24, 0xCF	; 207
  9e:	97 e0       	ldi	r25, 0x07	; 7
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <i2cReceiveByte+0x1e>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <i2cReceiveByte+0x24>
  a6:	00 00       	nop
  a8:	f3 cf       	rjmp	.-26     	; 0x90 <i2cReceiveByte+0xe>
  aa:	86 2f       	mov	r24, r22
  ac:	50 d1       	rcall	.+672    	; 0x34e <i2c_write>
  ae:	3a d1       	rcall	.+628    	; 0x324 <i2c_stop>
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	81 0f       	add	r24, r17
  b4:	5a d1       	rcall	.+692    	; 0x36a <i2c_start>
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	89 d1       	rcall	.+786    	; 0x3cc <i2c_read>
  ba:	18 2f       	mov	r17, r24
  bc:	33 d1       	rcall	.+614    	; 0x324 <i2c_stop>
  be:	81 2f       	mov	r24, r17
  c0:	0f 90       	pop	r0
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	1f 91       	pop	r17
  c8:	08 95       	ret

000000ca <setVolume>:
  ca:	cf 93       	push	r28
  cc:	cf e7       	ldi	r28, 0x7F	; 127
  ce:	c8 1b       	sub	r28, r24
  d0:	ce 37       	cpi	r28, 0x7E	; 126
  d2:	08 f0       	brcs	.+2      	; 0xd6 <setVolume+0xc>
  d4:	cf ef       	ldi	r28, 0xFF	; 255
  d6:	80 91 69 00 	lds	r24, 0x0069
  da:	c8 17       	cp	r28, r24
  dc:	21 f0       	breq	.+8      	; 0xe6 <setVolume+0x1c>
  de:	4c 2f       	mov	r20, r28
  e0:	60 e1       	ldi	r22, 0x10	; 16
  e2:	80 e9       	ldi	r24, 0x90	; 144
  e4:	b5 df       	rcall	.-150    	; 0x50 <i2cSendByte>
  e6:	c0 93 69 00 	sts	0x0069, r28
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <getVolume>:
  ee:	e0 e6       	ldi	r30, 0x60	; 96
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	36 9a       	sbi	0x06, 6	; 6
  f4:	36 9b       	sbis	0x06, 6	; 6
  f6:	04 c0       	rjmp	.+8      	; 0x100 <getVolume+0x12>
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	86 95       	lsr	r24
  fc:	80 83       	st	Z, r24
  fe:	fa cf       	rjmp	.-12     	; 0xf4 <getVolume+0x6>
 100:	31 96       	adiw	r30, 0x01	; 1
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	e8 36       	cpi	r30, 0x68	; 104
 106:	f8 07       	cpc	r31, r24
 108:	a1 f7       	brne	.-24     	; 0xf2 <getVolume+0x4>
 10a:	20 e2       	ldi	r18, 0x20	; 32
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	68 e0       	ldi	r22, 0x08	; 8
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	80 e6       	ldi	r24, 0x60	; 96
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	ac d1       	rcall	.+856    	; 0x474 <qsort>
 11c:	80 91 64 00 	lds	r24, 0x0064
 120:	08 95       	ret

00000122 <configureDAC>:
 122:	80 91 68 00 	lds	r24, 0x0068
 126:	80 ff       	sbrs	r24, 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <configureDAC+0xc>
 12a:	44 e0       	ldi	r20, 0x04	; 4
 12c:	01 c0       	rjmp	.+2      	; 0x130 <configureDAC+0xe>
 12e:	41 e0       	ldi	r20, 0x01	; 1
 130:	61 e0       	ldi	r22, 0x01	; 1
 132:	80 e9       	ldi	r24, 0x90	; 144
 134:	8d df       	rcall	.-230    	; 0x50 <i2cSendByte>
 136:	4c e3       	ldi	r20, 0x3C	; 60
 138:	80 91 6a 00 	lds	r24, 0x006A
 13c:	80 fd       	sbrc	r24, 0
 13e:	4c e7       	ldi	r20, 0x7C	; 124
 140:	80 91 68 00 	lds	r24, 0x0068
 144:	28 2f       	mov	r18, r24
 146:	26 95       	lsr	r18
 148:	23 70       	andi	r18, 0x03	; 3
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	21 30       	cpi	r18, 0x01	; 1
 14e:	31 05       	cpc	r19, r1
 150:	29 f0       	breq	.+10     	; 0x15c <configureDAC+0x3a>
 152:	23 30       	cpi	r18, 0x03	; 3
 154:	31 05       	cpc	r19, r1
 156:	29 f0       	breq	.+10     	; 0x162 <configureDAC+0x40>
 158:	4c 7f       	andi	r20, 0xFC	; 252
 15a:	04 c0       	rjmp	.+8      	; 0x164 <configureDAC+0x42>
 15c:	4c 7f       	andi	r20, 0xFC	; 252
 15e:	41 60       	ori	r20, 0x01	; 1
 160:	01 c0       	rjmp	.+2      	; 0x164 <configureDAC+0x42>
 162:	43 60       	ori	r20, 0x03	; 3
 164:	86 95       	lsr	r24
 166:	86 95       	lsr	r24
 168:	86 95       	lsr	r24
 16a:	83 70       	andi	r24, 0x03	; 3
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	91 05       	cpc	r25, r1
 172:	21 f0       	breq	.+8      	; 0x17c <configureDAC+0x5a>
 174:	02 97       	sbiw	r24, 0x02	; 2
 176:	39 f0       	breq	.+14     	; 0x186 <configureDAC+0x64>
 178:	4c 63       	ori	r20, 0x3C	; 60
 17a:	06 c0       	rjmp	.+12     	; 0x188 <configureDAC+0x66>
 17c:	43 7f       	andi	r20, 0xF3	; 243
 17e:	44 60       	ori	r20, 0x04	; 4
 180:	4f 7c       	andi	r20, 0xCF	; 207
 182:	40 61       	ori	r20, 0x10	; 16
 184:	01 c0       	rjmp	.+2      	; 0x188 <configureDAC+0x66>
 186:	43 7c       	andi	r20, 0xC3	; 195
 188:	62 e0       	ldi	r22, 0x02	; 2
 18a:	80 e9       	ldi	r24, 0x90	; 144
 18c:	61 df       	rcall	.-318    	; 0x50 <i2cSendByte>
 18e:	80 91 6a 00 	lds	r24, 0x006A
 192:	80 fd       	sbrc	r24, 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <configureDAC+0x78>
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	01 c0       	rjmp	.+2      	; 0x19c <configureDAC+0x7a>
 19a:	44 e0       	ldi	r20, 0x04	; 4
 19c:	64 e0       	ldi	r22, 0x04	; 4
 19e:	80 e9       	ldi	r24, 0x90	; 144
 1a0:	57 df       	rcall	.-338    	; 0x50 <i2cSendByte>
 1a2:	40 91 68 00 	lds	r20, 0x0068
 1a6:	80 91 6a 00 	lds	r24, 0x006A
 1aa:	86 95       	lsr	r24
 1ac:	86 70       	andi	r24, 0x06	; 6
 1ae:	40 7e       	andi	r20, 0xE0	; 224
 1b0:	48 2b       	or	r20, r24
 1b2:	67 e0       	ldi	r22, 0x07	; 7
 1b4:	80 e9       	ldi	r24, 0x90	; 144
 1b6:	4c df       	rcall	.-360    	; 0x50 <i2cSendByte>
 1b8:	40 e8       	ldi	r20, 0x80	; 128
 1ba:	68 e0       	ldi	r22, 0x08	; 8
 1bc:	80 e9       	ldi	r24, 0x90	; 144
 1be:	48 df       	rcall	.-368    	; 0x50 <i2cSendByte>
 1c0:	48 e1       	ldi	r20, 0x18	; 24
 1c2:	69 e0       	ldi	r22, 0x09	; 9
 1c4:	80 e9       	ldi	r24, 0x90	; 144
 1c6:	44 df       	rcall	.-376    	; 0x50 <i2cSendByte>
 1c8:	40 e3       	ldi	r20, 0x30	; 48
 1ca:	6b e0       	ldi	r22, 0x0B	; 11
 1cc:	80 e9       	ldi	r24, 0x90	; 144
 1ce:	40 df       	rcall	.-384    	; 0x50 <i2cSendByte>
 1d0:	80 91 6a 00 	lds	r24, 0x006A
 1d4:	82 95       	swap	r24
 1d6:	8f 70       	andi	r24, 0x0F	; 15
 1d8:	09 f4       	brne	.+2      	; 0x1dc <configureDAC+0xba>
 1da:	85 e0       	ldi	r24, 0x05	; 5
 1dc:	48 2f       	mov	r20, r24
 1de:	42 95       	swap	r20
 1e0:	40 7f       	andi	r20, 0xF0	; 240
 1e2:	48 2b       	or	r20, r24
 1e4:	6c e0       	ldi	r22, 0x0C	; 12
 1e6:	80 e9       	ldi	r24, 0x90	; 144
 1e8:	33 df       	rcall	.-410    	; 0x50 <i2cSendByte>
 1ea:	40 e2       	ldi	r20, 0x20	; 32
 1ec:	6d e0       	ldi	r22, 0x0D	; 13
 1ee:	80 e9       	ldi	r24, 0x90	; 144
 1f0:	2f df       	rcall	.-418    	; 0x50 <i2cSendByte>
 1f2:	4f e0       	ldi	r20, 0x0F	; 15
 1f4:	6f e0       	ldi	r22, 0x0F	; 15
 1f6:	80 e9       	ldi	r24, 0x90	; 144
 1f8:	2b df       	rcall	.-426    	; 0x50 <i2cSendByte>
 1fa:	80 91 6a 00 	lds	r24, 0x006A
 1fe:	81 ff       	sbrs	r24, 1
 200:	02 c0       	rjmp	.+4      	; 0x206 <configureDAC+0xe4>
 202:	40 e8       	ldi	r20, 0x80	; 128
 204:	01 c0       	rjmp	.+2      	; 0x208 <configureDAC+0xe6>
 206:	40 e0       	ldi	r20, 0x00	; 0
 208:	65 e2       	ldi	r22, 0x25	; 37
 20a:	80 e9       	ldi	r24, 0x90	; 144
 20c:	21 cf       	rjmp	.-446    	; 0x50 <i2cSendByte>

0000020e <readSwitchStates>:
 20e:	cf 93       	push	r28
 210:	62 e1       	ldi	r22, 0x12	; 18
 212:	80 e4       	ldi	r24, 0x40	; 64
 214:	36 df       	rcall	.-404    	; 0x82 <i2cReceiveByte>
 216:	c8 2f       	mov	r28, r24
 218:	63 e1       	ldi	r22, 0x13	; 19
 21a:	80 e4       	ldi	r24, 0x40	; 64
 21c:	32 df       	rcall	.-412    	; 0x82 <i2cReceiveByte>
 21e:	90 91 68 00 	lds	r25, 0x0068
 222:	c9 13       	cpse	r28, r25
 224:	04 c0       	rjmp	.+8      	; 0x22e <readSwitchStates+0x20>
 226:	90 91 6a 00 	lds	r25, 0x006A
 22a:	89 17       	cp	r24, r25
 22c:	31 f0       	breq	.+12     	; 0x23a <readSwitchStates+0x2c>
 22e:	c0 93 68 00 	sts	0x0068, r28
 232:	80 93 6a 00 	sts	0x006A, r24
 236:	cf 91       	pop	r28
 238:	74 cf       	rjmp	.-280    	; 0x122 <configureDAC>
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <initialize>:
 23e:	bc 98       	cbi	0x17, 4	; 23
 240:	c4 98       	cbi	0x18, 4	; 24
 242:	16 b8       	out	0x06, r1	; 6
 244:	17 b8       	out	0x07, r1	; 7
 246:	3d 9a       	sbi	0x07, 5	; 7
 248:	38 98       	cbi	0x07, 0	; 7
 24a:	39 9a       	sbi	0x07, 1	; 7
 24c:	3a 98       	cbi	0x07, 2	; 7
 24e:	3b 98       	cbi	0x07, 3	; 7
 250:	3e 98       	cbi	0x07, 6	; 7
 252:	3f 98       	cbi	0x07, 7	; 7
 254:	37 98       	cbi	0x06, 7	; 6
 256:	32 9a       	sbi	0x06, 2	; 6
 258:	31 9a       	sbi	0x06, 1	; 6
 25a:	30 9a       	sbi	0x06, 0	; 6
 25c:	37 9a       	sbi	0x06, 7	; 6
 25e:	3c d0       	rcall	.+120    	; 0x2d8 <i2c_init>
 260:	8f ec       	ldi	r24, 0xCF	; 207
 262:	97 e0       	ldi	r25, 0x07	; 7
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <__stack+0x5>
 268:	00 c0       	rjmp	.+0      	; 0x26a <__stack+0xb>
 26a:	00 00       	nop
 26c:	40 e2       	ldi	r20, 0x20	; 32
 26e:	6a e0       	ldi	r22, 0x0A	; 10
 270:	80 e4       	ldi	r24, 0x40	; 64
 272:	ee de       	rcall	.-548    	; 0x50 <i2cSendByte>
 274:	8f ec       	ldi	r24, 0xCF	; 207
 276:	97 e0       	ldi	r25, 0x07	; 7
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <__stack+0x19>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <__stack+0x1f>
 27e:	00 00       	nop
 280:	4f ef       	ldi	r20, 0xFF	; 255
 282:	6c e0       	ldi	r22, 0x0C	; 12
 284:	80 e4       	ldi	r24, 0x40	; 64
 286:	e4 de       	rcall	.-568    	; 0x50 <i2cSendByte>
 288:	4f ef       	ldi	r20, 0xFF	; 255
 28a:	6d e0       	ldi	r22, 0x0D	; 13
 28c:	80 e4       	ldi	r24, 0x40	; 64
 28e:	e0 de       	rcall	.-576    	; 0x50 <i2cSendByte>
 290:	8f e1       	ldi	r24, 0x1F	; 31
 292:	9e e4       	ldi	r25, 0x4E	; 78
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <__stack+0x35>
 298:	00 c0       	rjmp	.+0      	; 0x29a <__stack+0x3b>
 29a:	00 00       	nop
 29c:	b8 cf       	rjmp	.-144    	; 0x20e <readSwitchStates>

0000029e <main>:
 29e:	b9 9a       	sbi	0x17, 1	; 23
 2a0:	c1 98       	cbi	0x18, 1	; 24
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	8e e9       	ldi	r24, 0x9E	; 158
 2a6:	94 e2       	ldi	r25, 0x24	; 36
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0xa>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x14>
 2b2:	00 00       	nop
 2b4:	c1 9a       	sbi	0x18, 1	; 24
 2b6:	c3 df       	rcall	.-122    	; 0x23e <initialize>
 2b8:	34 df       	rcall	.-408    	; 0x122 <configureDAC>
 2ba:	c0 e0       	ldi	r28, 0x00	; 0
 2bc:	18 df       	rcall	.-464    	; 0xee <getVolume>
 2be:	05 df       	rcall	.-502    	; 0xca <setVolume>
 2c0:	8f e5       	ldi	r24, 0x5F	; 95
 2c2:	9a ee       	ldi	r25, 0xEA	; 234
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <main+0x26>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <main+0x2c>
 2ca:	00 00       	nop
 2cc:	ca 30       	cpi	r28, 0x0A	; 10
 2ce:	11 f4       	brne	.+4      	; 0x2d4 <main+0x36>
 2d0:	9e df       	rcall	.-196    	; 0x20e <readSwitchStates>
 2d2:	c0 e0       	ldi	r28, 0x00	; 0
 2d4:	cf 5f       	subi	r28, 0xFF	; 255
 2d6:	f2 cf       	rjmp	.-28     	; 0x2bc <main+0x1e>

000002d8 <i2c_init>:
 2d8:	c0 9a       	sbi	0x18, 0	; 24
 2da:	c2 9a       	sbi	0x18, 2	; 24
 2dc:	ba 9a       	sbi	0x17, 2	; 23
 2de:	b8 9a       	sbi	0x17, 0	; 23
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	8f b9       	out	0x0f, r24	; 15
 2e4:	8a e2       	ldi	r24, 0x2A	; 42
 2e6:	8d b9       	out	0x0d, r24	; 13
 2e8:	80 ef       	ldi	r24, 0xF0	; 240
 2ea:	8e b9       	out	0x0e, r24	; 14
 2ec:	08 95       	ret

000002ee <i2c_get_state_info>:
 2ee:	80 91 6b 00 	lds	r24, 0x006B
 2f2:	08 95       	ret

000002f4 <USI_I2C_Master_Transfer>:
 2f4:	8e b9       	out	0x0e, r24	; 14
 2f6:	8b e2       	ldi	r24, 0x2B	; 43
 2f8:	93 e0       	ldi	r25, 0x03	; 3
 2fa:	9a 95       	dec	r25
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <USI_I2C_Master_Transfer+0x6>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <USI_I2C_Master_Transfer+0xc>
 300:	8d b9       	out	0x0d, r24	; 13
 302:	b2 9b       	sbis	0x16, 2	; 22
 304:	fe cf       	rjmp	.-4      	; 0x302 <USI_I2C_Master_Transfer+0xe>
 306:	00 c0       	rjmp	.+0      	; 0x308 <USI_I2C_Master_Transfer+0x14>
 308:	00 c0       	rjmp	.+0      	; 0x30a <USI_I2C_Master_Transfer+0x16>
 30a:	00 00       	nop
 30c:	8d b9       	out	0x0d, r24	; 13
 30e:	76 9b       	sbis	0x0e, 6	; 14
 310:	f3 cf       	rjmp	.-26     	; 0x2f8 <USI_I2C_Master_Transfer+0x4>
 312:	83 e0       	ldi	r24, 0x03	; 3
 314:	8a 95       	dec	r24
 316:	f1 f7       	brne	.-4      	; 0x314 <USI_I2C_Master_Transfer+0x20>
 318:	00 c0       	rjmp	.+0      	; 0x31a <USI_I2C_Master_Transfer+0x26>
 31a:	8f b1       	in	r24, 0x0f	; 15
 31c:	9f ef       	ldi	r25, 0xFF	; 255
 31e:	9f b9       	out	0x0f, r25	; 15
 320:	b8 9a       	sbi	0x17, 0	; 23
 322:	08 95       	ret

00000324 <i2c_stop>:
 324:	c0 98       	cbi	0x18, 0	; 24
 326:	c2 9a       	sbi	0x18, 2	; 24
 328:	b2 9b       	sbis	0x16, 2	; 22
 32a:	fe cf       	rjmp	.-4      	; 0x328 <i2c_stop+0x4>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <i2c_stop+0xa>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <i2c_stop+0xc>
 330:	00 00       	nop
 332:	c0 9a       	sbi	0x18, 0	; 24
 334:	83 e0       	ldi	r24, 0x03	; 3
 336:	8a 95       	dec	r24
 338:	f1 f7       	brne	.-4      	; 0x336 <i2c_stop+0x12>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <i2c_stop+0x18>
 33c:	75 99       	sbic	0x0e, 5	; 14
 33e:	05 c0       	rjmp	.+10     	; 0x34a <i2c_stop+0x26>
 340:	84 e0       	ldi	r24, 0x04	; 4
 342:	80 93 6b 00 	sts	0x006B, r24
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	08 95       	ret
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	08 95       	ret

0000034e <i2c_write>:
 34e:	b8 9a       	sbi	0x17, 0	; 23
 350:	c2 98       	cbi	0x18, 2	; 24
 352:	8f b9       	out	0x0f, r24	; 15
 354:	80 ef       	ldi	r24, 0xF0	; 240
 356:	ce df       	rcall	.-100    	; 0x2f4 <USI_I2C_Master_Transfer>
 358:	b8 98       	cbi	0x17, 0	; 23
 35a:	8e ef       	ldi	r24, 0xFE	; 254
 35c:	cb df       	rcall	.-106    	; 0x2f4 <USI_I2C_Master_Transfer>
 35e:	88 23       	and	r24, r24
 360:	19 f0       	breq	.+6      	; 0x368 <i2c_write+0x1a>
 362:	92 e0       	ldi	r25, 0x02	; 2
 364:	90 93 6b 00 	sts	0x006B, r25
 368:	08 95       	ret

0000036a <i2c_start>:
 36a:	c2 9a       	sbi	0x18, 2	; 24
 36c:	c2 9b       	sbis	0x18, 2	; 24
 36e:	fe cf       	rjmp	.-4      	; 0x36c <i2c_start+0x2>
 370:	93 e0       	ldi	r25, 0x03	; 3
 372:	9a 95       	dec	r25
 374:	f1 f7       	brne	.-4      	; 0x372 <i2c_start+0x8>
 376:	00 c0       	rjmp	.+0      	; 0x378 <i2c_start+0xe>
 378:	c0 98       	cbi	0x18, 0	; 24
 37a:	00 c0       	rjmp	.+0      	; 0x37c <i2c_start+0x12>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <i2c_start+0x14>
 37e:	00 00       	nop
 380:	c2 98       	cbi	0x18, 2	; 24
 382:	00 c0       	rjmp	.+0      	; 0x384 <i2c_start+0x1a>
 384:	00 c0       	rjmp	.+0      	; 0x386 <i2c_start+0x1c>
 386:	00 00       	nop
 388:	c0 9a       	sbi	0x18, 0	; 24
 38a:	77 99       	sbic	0x0e, 7	; 14
 38c:	05 c0       	rjmp	.+10     	; 0x398 <i2c_start+0x2e>
 38e:	83 e0       	ldi	r24, 0x03	; 3
 390:	80 93 6b 00 	sts	0x006B, r24
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	08 95       	ret
 398:	da df       	rcall	.-76     	; 0x34e <i2c_write>
 39a:	81 11       	cpse	r24, r1
 39c:	04 c0       	rjmp	.+8      	; 0x3a6 <i2c_start+0x3c>
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	80 93 6b 00 	sts	0x006B, r24
 3a4:	08 95       	ret
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	08 95       	ret

000003aa <i2c_start_wait>:
 3aa:	cf 93       	push	r28
 3ac:	c8 2f       	mov	r28, r24
 3ae:	dd df       	rcall	.-70     	; 0x36a <i2c_start>
 3b0:	81 30       	cpi	r24, 0x01	; 1
 3b2:	49 f4       	brne	.+18     	; 0x3c6 <i2c_start_wait+0x1c>
 3b4:	b7 df       	rcall	.-146    	; 0x324 <i2c_stop>
 3b6:	8f e1       	ldi	r24, 0x1F	; 31
 3b8:	9e e4       	ldi	r25, 0x4E	; 78
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <i2c_start_wait+0x10>
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <i2c_start_wait+0x16>
 3c0:	00 00       	nop
 3c2:	8c 2f       	mov	r24, r28
 3c4:	f2 df       	rcall	.-28     	; 0x3aa <i2c_start_wait>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <i2c_read>:
 3cc:	cf 93       	push	r28
 3ce:	df 93       	push	r29
 3d0:	d8 2f       	mov	r29, r24
 3d2:	b8 98       	cbi	0x17, 0	; 23
 3d4:	c2 98       	cbi	0x18, 2	; 24
 3d6:	1f b8       	out	0x0f, r1	; 15
 3d8:	80 ef       	ldi	r24, 0xF0	; 240
 3da:	8c df       	rcall	.-232    	; 0x2f4 <USI_I2C_Master_Transfer>
 3dc:	c8 2f       	mov	r28, r24
 3de:	b8 9a       	sbi	0x17, 0	; 23
 3e0:	d1 11       	cpse	r29, r1
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <i2c_read+0x1c>
 3e4:	1f b8       	out	0x0f, r1	; 15
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <i2c_read+0x20>
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	8f b9       	out	0x0f, r24	; 15
 3ec:	8e ef       	ldi	r24, 0xFE	; 254
 3ee:	82 df       	rcall	.-252    	; 0x2f4 <USI_I2C_Master_Transfer>
 3f0:	8c 2f       	mov	r24, r28
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	08 95       	ret

000003f8 <swapfunc>:
 3f8:	dc 01       	movw	r26, r24
 3fa:	fb 01       	movw	r30, r22
 3fc:	8c 91       	ld	r24, X
 3fe:	90 81       	ld	r25, Z
 400:	9d 93       	st	X+, r25
 402:	81 93       	st	Z+, r24
 404:	41 50       	subi	r20, 0x01	; 1
 406:	51 09       	sbc	r21, r1
 408:	14 16       	cp	r1, r20
 40a:	15 06       	cpc	r1, r21
 40c:	bc f3       	brlt	.-18     	; 0x3fc <swapfunc+0x4>
 40e:	08 95       	ret

00000410 <med3>:
 410:	a0 e0       	ldi	r26, 0x00	; 0
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	ed e0       	ldi	r30, 0x0D	; 13
 416:	f2 e0       	ldi	r31, 0x02	; 2
 418:	cd c1       	rjmp	.+922    	; 0x7b4 <__prologue_saves__+0x14>
 41a:	6c 01       	movw	r12, r24
 41c:	7b 01       	movw	r14, r22
 41e:	8a 01       	movw	r16, r20
 420:	e9 01       	movw	r28, r18
 422:	f9 01       	movw	r30, r18
 424:	09 95       	icall
 426:	b8 01       	movw	r22, r16
 428:	97 ff       	sbrs	r25, 7
 42a:	0f c0       	rjmp	.+30     	; 0x44a <med3+0x3a>
 42c:	c7 01       	movw	r24, r14
 42e:	fe 01       	movw	r30, r28
 430:	09 95       	icall
 432:	97 fd       	sbrc	r25, 7
 434:	08 c0       	rjmp	.+16     	; 0x446 <med3+0x36>
 436:	b8 01       	movw	r22, r16
 438:	c6 01       	movw	r24, r12
 43a:	fe 01       	movw	r30, r28
 43c:	09 95       	icall
 43e:	97 fd       	sbrc	r25, 7
 440:	14 c0       	rjmp	.+40     	; 0x46a <med3+0x5a>
 442:	86 01       	movw	r16, r12
 444:	12 c0       	rjmp	.+36     	; 0x46a <med3+0x5a>
 446:	87 01       	movw	r16, r14
 448:	10 c0       	rjmp	.+32     	; 0x46a <med3+0x5a>
 44a:	c7 01       	movw	r24, r14
 44c:	fe 01       	movw	r30, r28
 44e:	09 95       	icall
 450:	18 16       	cp	r1, r24
 452:	19 06       	cpc	r1, r25
 454:	44 f0       	brlt	.+16     	; 0x466 <med3+0x56>
 456:	b8 01       	movw	r22, r16
 458:	c6 01       	movw	r24, r12
 45a:	fe 01       	movw	r30, r28
 45c:	09 95       	icall
 45e:	97 ff       	sbrs	r25, 7
 460:	04 c0       	rjmp	.+8      	; 0x46a <med3+0x5a>
 462:	c6 01       	movw	r24, r12
 464:	03 c0       	rjmp	.+6      	; 0x46c <med3+0x5c>
 466:	c7 01       	movw	r24, r14
 468:	01 c0       	rjmp	.+2      	; 0x46c <med3+0x5c>
 46a:	c8 01       	movw	r24, r16
 46c:	cd b7       	in	r28, 0x3d	; 61
 46e:	de b7       	in	r29, 0x3e	; 62
 470:	e8 e0       	ldi	r30, 0x08	; 8
 472:	bc c1       	rjmp	.+888    	; 0x7ec <__epilogue_restores__+0x14>

00000474 <qsort>:
 474:	a8 e0       	ldi	r26, 0x08	; 8
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	ef e3       	ldi	r30, 0x3F	; 63
 47a:	f2 e0       	ldi	r31, 0x02	; 2
 47c:	91 c1       	rjmp	.+802    	; 0x7a0 <__prologue_saves__>
 47e:	8c 01       	movw	r16, r24
 480:	7b 01       	movw	r14, r22
 482:	58 87       	std	Y+8, r21	; 0x08
 484:	4f 83       	std	Y+7, r20	; 0x07
 486:	69 01       	movw	r12, r18
 488:	4f 80       	ldd	r4, Y+7	; 0x07
 48a:	58 84       	ldd	r5, Y+8	; 0x08
 48c:	40 0e       	add	r4, r16
 48e:	51 1e       	adc	r5, r17
 490:	47 e0       	ldi	r20, 0x07	; 7
 492:	e4 16       	cp	r14, r20
 494:	f1 04       	cpc	r15, r1
 496:	40 f5       	brcc	.+80     	; 0x4e8 <qsort+0x74>
 498:	42 01       	movw	r8, r4
 49a:	c7 01       	movw	r24, r14
 49c:	6f 81       	ldd	r22, Y+7	; 0x07
 49e:	78 85       	ldd	r23, Y+8	; 0x08
 4a0:	5a d1       	rcall	.+692    	; 0x756 <__mulhi3>
 4a2:	58 01       	movw	r10, r16
 4a4:	a8 0e       	add	r10, r24
 4a6:	b9 1e       	adc	r11, r25
 4a8:	8a 14       	cp	r8, r10
 4aa:	9b 04       	cpc	r9, r11
 4ac:	08 f0       	brcs	.+2      	; 0x4b0 <qsort+0x3c>
 4ae:	50 c1       	rjmp	.+672    	; 0x750 <qsort+0x2dc>
 4b0:	34 01       	movw	r6, r8
 4b2:	06 15       	cp	r16, r6
 4b4:	17 05       	cpc	r17, r7
 4b6:	98 f4       	brcc	.+38     	; 0x4de <qsort+0x6a>
 4b8:	73 01       	movw	r14, r6
 4ba:	6f 81       	ldd	r22, Y+7	; 0x07
 4bc:	78 85       	ldd	r23, Y+8	; 0x08
 4be:	e6 1a       	sub	r14, r22
 4c0:	f7 0a       	sbc	r15, r23
 4c2:	b3 01       	movw	r22, r6
 4c4:	c7 01       	movw	r24, r14
 4c6:	f6 01       	movw	r30, r12
 4c8:	09 95       	icall
 4ca:	18 16       	cp	r1, r24
 4cc:	19 06       	cpc	r1, r25
 4ce:	3c f4       	brge	.+14     	; 0x4de <qsort+0x6a>
 4d0:	4f 81       	ldd	r20, Y+7	; 0x07
 4d2:	58 85       	ldd	r21, Y+8	; 0x08
 4d4:	b7 01       	movw	r22, r14
 4d6:	c3 01       	movw	r24, r6
 4d8:	8f df       	rcall	.-226    	; 0x3f8 <swapfunc>
 4da:	37 01       	movw	r6, r14
 4dc:	ea cf       	rjmp	.-44     	; 0x4b2 <qsort+0x3e>
 4de:	4f 81       	ldd	r20, Y+7	; 0x07
 4e0:	58 85       	ldd	r21, Y+8	; 0x08
 4e2:	84 0e       	add	r8, r20
 4e4:	95 1e       	adc	r9, r21
 4e6:	e0 cf       	rjmp	.-64     	; 0x4a8 <qsort+0x34>
 4e8:	c7 01       	movw	r24, r14
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	6f 81       	ldd	r22, Y+7	; 0x07
 4f0:	78 85       	ldd	r23, Y+8	; 0x08
 4f2:	31 d1       	rcall	.+610    	; 0x756 <__mulhi3>
 4f4:	58 01       	movw	r10, r16
 4f6:	a8 0e       	add	r10, r24
 4f8:	b9 1e       	adc	r11, r25
 4fa:	b7 01       	movw	r22, r14
 4fc:	61 50       	subi	r22, 0x01	; 1
 4fe:	71 09       	sbc	r23, r1
 500:	7c 83       	std	Y+4, r23	; 0x04
 502:	6b 83       	std	Y+3, r22	; 0x03
 504:	77 e0       	ldi	r23, 0x07	; 7
 506:	e7 16       	cp	r14, r23
 508:	f1 04       	cpc	r15, r1
 50a:	09 f4       	brne	.+2      	; 0x50e <qsort+0x9a>
 50c:	49 c0       	rjmp	.+146    	; 0x5a0 <qsort+0x12c>
 50e:	8b 81       	ldd	r24, Y+3	; 0x03
 510:	9c 81       	ldd	r25, Y+4	; 0x04
 512:	6f 81       	ldd	r22, Y+7	; 0x07
 514:	78 85       	ldd	r23, Y+8	; 0x08
 516:	1f d1       	rcall	.+574    	; 0x756 <__mulhi3>
 518:	38 01       	movw	r6, r16
 51a:	68 0e       	add	r6, r24
 51c:	79 1e       	adc	r7, r25
 51e:	89 e2       	ldi	r24, 0x29	; 41
 520:	e8 16       	cp	r14, r24
 522:	f1 04       	cpc	r15, r1
 524:	a0 f1       	brcs	.+104    	; 0x58e <qsort+0x11a>
 526:	c7 01       	movw	r24, r14
 528:	23 e0       	ldi	r18, 0x03	; 3
 52a:	96 95       	lsr	r25
 52c:	87 95       	ror	r24
 52e:	2a 95       	dec	r18
 530:	e1 f7       	brne	.-8      	; 0x52a <qsort+0xb6>
 532:	6f 81       	ldd	r22, Y+7	; 0x07
 534:	78 85       	ldd	r23, Y+8	; 0x08
 536:	0f d1       	rcall	.+542    	; 0x756 <__mulhi3>
 538:	4c 01       	movw	r8, r24
 53a:	fc 01       	movw	r30, r24
 53c:	ee 0f       	add	r30, r30
 53e:	ff 1f       	adc	r31, r31
 540:	fa 83       	std	Y+2, r31	; 0x02
 542:	e9 83       	std	Y+1, r30	; 0x01
 544:	af 01       	movw	r20, r30
 546:	40 0f       	add	r20, r16
 548:	51 1f       	adc	r21, r17
 54a:	b8 01       	movw	r22, r16
 54c:	68 0f       	add	r22, r24
 54e:	79 1f       	adc	r23, r25
 550:	96 01       	movw	r18, r12
 552:	c8 01       	movw	r24, r16
 554:	5d df       	rcall	.-326    	; 0x410 <med3>
 556:	38 2e       	mov	r3, r24
 558:	29 2e       	mov	r2, r25
 55a:	a5 01       	movw	r20, r10
 55c:	48 0d       	add	r20, r8
 55e:	59 1d       	adc	r21, r9
 560:	91 94       	neg	r9
 562:	81 94       	neg	r8
 564:	91 08       	sbc	r9, r1
 566:	96 01       	movw	r18, r12
 568:	b5 01       	movw	r22, r10
 56a:	c5 01       	movw	r24, r10
 56c:	88 0d       	add	r24, r8
 56e:	99 1d       	adc	r25, r9
 570:	4f df       	rcall	.-354    	; 0x410 <med3>
 572:	5c 01       	movw	r10, r24
 574:	b3 01       	movw	r22, r6
 576:	68 0d       	add	r22, r8
 578:	79 1d       	adc	r23, r9
 57a:	96 01       	movw	r18, r12
 57c:	a3 01       	movw	r20, r6
 57e:	c3 01       	movw	r24, r6
 580:	e9 81       	ldd	r30, Y+1	; 0x01
 582:	fa 81       	ldd	r31, Y+2	; 0x02
 584:	8e 1b       	sub	r24, r30
 586:	9f 0b       	sbc	r25, r31
 588:	43 df       	rcall	.-378    	; 0x410 <med3>
 58a:	3c 01       	movw	r6, r24
 58c:	02 c0       	rjmp	.+4      	; 0x592 <qsort+0x11e>
 58e:	30 2e       	mov	r3, r16
 590:	21 2e       	mov	r2, r17
 592:	96 01       	movw	r18, r12
 594:	a3 01       	movw	r20, r6
 596:	b5 01       	movw	r22, r10
 598:	83 2d       	mov	r24, r3
 59a:	92 2d       	mov	r25, r2
 59c:	39 df       	rcall	.-398    	; 0x410 <med3>
 59e:	5c 01       	movw	r10, r24
 5a0:	4f 81       	ldd	r20, Y+7	; 0x07
 5a2:	58 85       	ldd	r21, Y+8	; 0x08
 5a4:	b5 01       	movw	r22, r10
 5a6:	c8 01       	movw	r24, r16
 5a8:	27 df       	rcall	.-434    	; 0x3f8 <swapfunc>
 5aa:	42 01       	movw	r8, r4
 5ac:	8b 81       	ldd	r24, Y+3	; 0x03
 5ae:	9c 81       	ldd	r25, Y+4	; 0x04
 5b0:	6f 81       	ldd	r22, Y+7	; 0x07
 5b2:	78 85       	ldd	r23, Y+8	; 0x08
 5b4:	d0 d0       	rcall	.+416    	; 0x756 <__mulhi3>
 5b6:	38 01       	movw	r6, r16
 5b8:	68 0e       	add	r6, r24
 5ba:	79 1e       	adc	r7, r25
 5bc:	23 01       	movw	r4, r6
 5be:	54 01       	movw	r10, r8
 5c0:	14 01       	movw	r2, r8
 5c2:	20 e0       	ldi	r18, 0x00	; 0
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	6a 14       	cp	r6, r10
 5c8:	7b 04       	cpc	r7, r11
 5ca:	e8 f1       	brcs	.+122    	; 0x646 <qsort+0x1d2>
 5cc:	b8 01       	movw	r22, r16
 5ce:	c5 01       	movw	r24, r10
 5d0:	2d 83       	std	Y+5, r18	; 0x05
 5d2:	3e 83       	std	Y+6, r19	; 0x06
 5d4:	f6 01       	movw	r30, r12
 5d6:	09 95       	icall
 5d8:	2d 81       	ldd	r18, Y+5	; 0x05
 5da:	3e 81       	ldd	r19, Y+6	; 0x06
 5dc:	18 16       	cp	r1, r24
 5de:	19 06       	cpc	r1, r25
 5e0:	94 f1       	brlt	.+100    	; 0x646 <qsort+0x1d2>
 5e2:	89 2b       	or	r24, r25
 5e4:	59 f4       	brne	.+22     	; 0x5fc <qsort+0x188>
 5e6:	4f 81       	ldd	r20, Y+7	; 0x07
 5e8:	58 85       	ldd	r21, Y+8	; 0x08
 5ea:	b5 01       	movw	r22, r10
 5ec:	c1 01       	movw	r24, r2
 5ee:	04 df       	rcall	.-504    	; 0x3f8 <swapfunc>
 5f0:	4f 81       	ldd	r20, Y+7	; 0x07
 5f2:	58 85       	ldd	r21, Y+8	; 0x08
 5f4:	24 0e       	add	r2, r20
 5f6:	35 1e       	adc	r3, r21
 5f8:	21 e0       	ldi	r18, 0x01	; 1
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	6f 81       	ldd	r22, Y+7	; 0x07
 5fe:	78 85       	ldd	r23, Y+8	; 0x08
 600:	a6 0e       	add	r10, r22
 602:	b7 1e       	adc	r11, r23
 604:	e0 cf       	rjmp	.-64     	; 0x5c6 <qsort+0x152>
 606:	b8 01       	movw	r22, r16
 608:	c3 01       	movw	r24, r6
 60a:	2d 83       	std	Y+5, r18	; 0x05
 60c:	3e 83       	std	Y+6, r19	; 0x06
 60e:	f6 01       	movw	r30, r12
 610:	09 95       	icall
 612:	a3 01       	movw	r20, r6
 614:	6f 81       	ldd	r22, Y+7	; 0x07
 616:	78 85       	ldd	r23, Y+8	; 0x08
 618:	46 1b       	sub	r20, r22
 61a:	57 0b       	sbc	r21, r23
 61c:	5a 83       	std	Y+2, r21	; 0x02
 61e:	49 83       	std	Y+1, r20	; 0x01
 620:	2d 81       	ldd	r18, Y+5	; 0x05
 622:	3e 81       	ldd	r19, Y+6	; 0x06
 624:	97 fd       	sbrc	r25, 7
 626:	13 c0       	rjmp	.+38     	; 0x64e <qsort+0x1da>
 628:	89 2b       	or	r24, r25
 62a:	59 f4       	brne	.+22     	; 0x642 <qsort+0x1ce>
 62c:	4f 81       	ldd	r20, Y+7	; 0x07
 62e:	58 85       	ldd	r21, Y+8	; 0x08
 630:	b2 01       	movw	r22, r4
 632:	c3 01       	movw	r24, r6
 634:	e1 de       	rcall	.-574    	; 0x3f8 <swapfunc>
 636:	4f 81       	ldd	r20, Y+7	; 0x07
 638:	58 85       	ldd	r21, Y+8	; 0x08
 63a:	44 1a       	sub	r4, r20
 63c:	55 0a       	sbc	r5, r21
 63e:	21 e0       	ldi	r18, 0x01	; 1
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	69 80       	ldd	r6, Y+1	; 0x01
 644:	7a 80       	ldd	r7, Y+2	; 0x02
 646:	6a 14       	cp	r6, r10
 648:	7b 04       	cpc	r7, r11
 64a:	e8 f6       	brcc	.-70     	; 0x606 <qsort+0x192>
 64c:	0e c0       	rjmp	.+28     	; 0x66a <qsort+0x1f6>
 64e:	4f 81       	ldd	r20, Y+7	; 0x07
 650:	58 85       	ldd	r21, Y+8	; 0x08
 652:	b3 01       	movw	r22, r6
 654:	c5 01       	movw	r24, r10
 656:	d0 de       	rcall	.-608    	; 0x3f8 <swapfunc>
 658:	4f 81       	ldd	r20, Y+7	; 0x07
 65a:	58 85       	ldd	r21, Y+8	; 0x08
 65c:	a4 0e       	add	r10, r20
 65e:	b5 1e       	adc	r11, r21
 660:	69 80       	ldd	r6, Y+1	; 0x01
 662:	7a 80       	ldd	r7, Y+2	; 0x02
 664:	21 e0       	ldi	r18, 0x01	; 1
 666:	30 e0       	ldi	r19, 0x00	; 0
 668:	ae cf       	rjmp	.-164    	; 0x5c6 <qsort+0x152>
 66a:	c7 01       	movw	r24, r14
 66c:	6f 81       	ldd	r22, Y+7	; 0x07
 66e:	78 85       	ldd	r23, Y+8	; 0x08
 670:	72 d0       	rcall	.+228    	; 0x756 <__mulhi3>
 672:	23 2b       	or	r18, r19
 674:	09 f4       	brne	.+2      	; 0x678 <qsort+0x204>
 676:	4a c0       	rjmp	.+148    	; 0x70c <qsort+0x298>
 678:	80 0f       	add	r24, r16
 67a:	91 1f       	adc	r25, r17
 67c:	9a 83       	std	Y+2, r25	; 0x02
 67e:	89 83       	std	Y+1, r24	; 0x01
 680:	75 01       	movw	r14, r10
 682:	e2 18       	sub	r14, r2
 684:	f3 08       	sbc	r15, r3
 686:	a1 01       	movw	r20, r2
 688:	40 1b       	sub	r20, r16
 68a:	51 0b       	sbc	r21, r17
 68c:	e4 16       	cp	r14, r20
 68e:	f5 06       	cpc	r15, r21
 690:	0c f4       	brge	.+2      	; 0x694 <qsort+0x220>
 692:	a7 01       	movw	r20, r14
 694:	14 16       	cp	r1, r20
 696:	15 06       	cpc	r1, r21
 698:	2c f4       	brge	.+10     	; 0x6a4 <qsort+0x230>
 69a:	b5 01       	movw	r22, r10
 69c:	64 1b       	sub	r22, r20
 69e:	75 0b       	sbc	r23, r21
 6a0:	c8 01       	movw	r24, r16
 6a2:	aa de       	rcall	.-684    	; 0x3f8 <swapfunc>
 6a4:	42 01       	movw	r8, r4
 6a6:	86 18       	sub	r8, r6
 6a8:	97 08       	sbc	r9, r7
 6aa:	49 81       	ldd	r20, Y+1	; 0x01
 6ac:	5a 81       	ldd	r21, Y+2	; 0x02
 6ae:	44 19       	sub	r20, r4
 6b0:	55 09       	sbc	r21, r5
 6b2:	6f 81       	ldd	r22, Y+7	; 0x07
 6b4:	78 85       	ldd	r23, Y+8	; 0x08
 6b6:	46 1b       	sub	r20, r22
 6b8:	57 0b       	sbc	r21, r23
 6ba:	84 16       	cp	r8, r20
 6bc:	95 06       	cpc	r9, r21
 6be:	08 f4       	brcc	.+2      	; 0x6c2 <qsort+0x24e>
 6c0:	a4 01       	movw	r20, r8
 6c2:	14 16       	cp	r1, r20
 6c4:	15 06       	cpc	r1, r21
 6c6:	34 f4       	brge	.+12     	; 0x6d4 <qsort+0x260>
 6c8:	69 81       	ldd	r22, Y+1	; 0x01
 6ca:	7a 81       	ldd	r23, Y+2	; 0x02
 6cc:	64 1b       	sub	r22, r20
 6ce:	75 0b       	sbc	r23, r21
 6d0:	c5 01       	movw	r24, r10
 6d2:	92 de       	rcall	.-732    	; 0x3f8 <swapfunc>
 6d4:	8f 81       	ldd	r24, Y+7	; 0x07
 6d6:	98 85       	ldd	r25, Y+8	; 0x08
 6d8:	8e 15       	cp	r24, r14
 6da:	9f 05       	cpc	r25, r15
 6dc:	48 f4       	brcc	.+18     	; 0x6f0 <qsort+0x27c>
 6de:	c7 01       	movw	r24, r14
 6e0:	6f 81       	ldd	r22, Y+7	; 0x07
 6e2:	78 85       	ldd	r23, Y+8	; 0x08
 6e4:	49 d0       	rcall	.+146    	; 0x778 <__udivmodhi4>
 6e6:	96 01       	movw	r18, r12
 6e8:	4f 81       	ldd	r20, Y+7	; 0x07
 6ea:	58 85       	ldd	r21, Y+8	; 0x08
 6ec:	c8 01       	movw	r24, r16
 6ee:	c2 de       	rcall	.-636    	; 0x474 <qsort>
 6f0:	ef 81       	ldd	r30, Y+7	; 0x07
 6f2:	f8 85       	ldd	r31, Y+8	; 0x08
 6f4:	e8 15       	cp	r30, r8
 6f6:	f9 05       	cpc	r31, r9
 6f8:	58 f5       	brcc	.+86     	; 0x750 <qsort+0x2dc>
 6fa:	09 81       	ldd	r16, Y+1	; 0x01
 6fc:	1a 81       	ldd	r17, Y+2	; 0x02
 6fe:	08 19       	sub	r16, r8
 700:	19 09       	sbc	r17, r9
 702:	c4 01       	movw	r24, r8
 704:	bf 01       	movw	r22, r30
 706:	38 d0       	rcall	.+112    	; 0x778 <__udivmodhi4>
 708:	7b 01       	movw	r14, r22
 70a:	be ce       	rjmp	.-644    	; 0x488 <qsort+0x14>
 70c:	58 01       	movw	r10, r16
 70e:	a8 0e       	add	r10, r24
 710:	b9 1e       	adc	r11, r25
 712:	8a 14       	cp	r8, r10
 714:	9b 04       	cpc	r9, r11
 716:	e0 f4       	brcc	.+56     	; 0x750 <qsort+0x2dc>
 718:	34 01       	movw	r6, r8
 71a:	06 15       	cp	r16, r6
 71c:	17 05       	cpc	r17, r7
 71e:	98 f4       	brcc	.+38     	; 0x746 <qsort+0x2d2>
 720:	73 01       	movw	r14, r6
 722:	8f 81       	ldd	r24, Y+7	; 0x07
 724:	98 85       	ldd	r25, Y+8	; 0x08
 726:	e8 1a       	sub	r14, r24
 728:	f9 0a       	sbc	r15, r25
 72a:	b3 01       	movw	r22, r6
 72c:	c7 01       	movw	r24, r14
 72e:	f6 01       	movw	r30, r12
 730:	09 95       	icall
 732:	18 16       	cp	r1, r24
 734:	19 06       	cpc	r1, r25
 736:	3c f4       	brge	.+14     	; 0x746 <qsort+0x2d2>
 738:	4f 81       	ldd	r20, Y+7	; 0x07
 73a:	58 85       	ldd	r21, Y+8	; 0x08
 73c:	b7 01       	movw	r22, r14
 73e:	c3 01       	movw	r24, r6
 740:	5b de       	rcall	.-842    	; 0x3f8 <swapfunc>
 742:	37 01       	movw	r6, r14
 744:	ea cf       	rjmp	.-44     	; 0x71a <qsort+0x2a6>
 746:	4f 81       	ldd	r20, Y+7	; 0x07
 748:	58 85       	ldd	r21, Y+8	; 0x08
 74a:	84 0e       	add	r8, r20
 74c:	95 1e       	adc	r9, r21
 74e:	e1 cf       	rjmp	.-62     	; 0x712 <qsort+0x29e>
 750:	28 96       	adiw	r28, 0x08	; 8
 752:	e2 e1       	ldi	r30, 0x12	; 18
 754:	41 c0       	rjmp	.+130    	; 0x7d8 <__epilogue_restores__>

00000756 <__mulhi3>:
 756:	00 24       	eor	r0, r0
 758:	55 27       	eor	r21, r21
 75a:	04 c0       	rjmp	.+8      	; 0x764 <__mulhi3+0xe>
 75c:	08 0e       	add	r0, r24
 75e:	59 1f       	adc	r21, r25
 760:	88 0f       	add	r24, r24
 762:	99 1f       	adc	r25, r25
 764:	00 97       	sbiw	r24, 0x00	; 0
 766:	29 f0       	breq	.+10     	; 0x772 <__mulhi3+0x1c>
 768:	76 95       	lsr	r23
 76a:	67 95       	ror	r22
 76c:	b8 f3       	brcs	.-18     	; 0x75c <__mulhi3+0x6>
 76e:	71 05       	cpc	r23, r1
 770:	b9 f7       	brne	.-18     	; 0x760 <__mulhi3+0xa>
 772:	80 2d       	mov	r24, r0
 774:	95 2f       	mov	r25, r21
 776:	08 95       	ret

00000778 <__udivmodhi4>:
 778:	aa 1b       	sub	r26, r26
 77a:	bb 1b       	sub	r27, r27
 77c:	51 e1       	ldi	r21, 0x11	; 17
 77e:	07 c0       	rjmp	.+14     	; 0x78e <__udivmodhi4_ep>

00000780 <__udivmodhi4_loop>:
 780:	aa 1f       	adc	r26, r26
 782:	bb 1f       	adc	r27, r27
 784:	a6 17       	cp	r26, r22
 786:	b7 07       	cpc	r27, r23
 788:	10 f0       	brcs	.+4      	; 0x78e <__udivmodhi4_ep>
 78a:	a6 1b       	sub	r26, r22
 78c:	b7 0b       	sbc	r27, r23

0000078e <__udivmodhi4_ep>:
 78e:	88 1f       	adc	r24, r24
 790:	99 1f       	adc	r25, r25
 792:	5a 95       	dec	r21
 794:	a9 f7       	brne	.-22     	; 0x780 <__udivmodhi4_loop>
 796:	80 95       	com	r24
 798:	90 95       	com	r25
 79a:	bc 01       	movw	r22, r24
 79c:	cd 01       	movw	r24, r26
 79e:	08 95       	ret

000007a0 <__prologue_saves__>:
 7a0:	2f 92       	push	r2
 7a2:	3f 92       	push	r3
 7a4:	4f 92       	push	r4
 7a6:	5f 92       	push	r5
 7a8:	6f 92       	push	r6
 7aa:	7f 92       	push	r7
 7ac:	8f 92       	push	r8
 7ae:	9f 92       	push	r9
 7b0:	af 92       	push	r10
 7b2:	bf 92       	push	r11
 7b4:	cf 92       	push	r12
 7b6:	df 92       	push	r13
 7b8:	ef 92       	push	r14
 7ba:	ff 92       	push	r15
 7bc:	0f 93       	push	r16
 7be:	1f 93       	push	r17
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	cd b7       	in	r28, 0x3d	; 61
 7c6:	de b7       	in	r29, 0x3e	; 62
 7c8:	ca 1b       	sub	r28, r26
 7ca:	db 0b       	sbc	r29, r27
 7cc:	0f b6       	in	r0, 0x3f	; 63
 7ce:	f8 94       	cli
 7d0:	de bf       	out	0x3e, r29	; 62
 7d2:	0f be       	out	0x3f, r0	; 63
 7d4:	cd bf       	out	0x3d, r28	; 61
 7d6:	09 94       	ijmp

000007d8 <__epilogue_restores__>:
 7d8:	2a 88       	ldd	r2, Y+18	; 0x12
 7da:	39 88       	ldd	r3, Y+17	; 0x11
 7dc:	48 88       	ldd	r4, Y+16	; 0x10
 7de:	5f 84       	ldd	r5, Y+15	; 0x0f
 7e0:	6e 84       	ldd	r6, Y+14	; 0x0e
 7e2:	7d 84       	ldd	r7, Y+13	; 0x0d
 7e4:	8c 84       	ldd	r8, Y+12	; 0x0c
 7e6:	9b 84       	ldd	r9, Y+11	; 0x0b
 7e8:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ea:	b9 84       	ldd	r11, Y+9	; 0x09
 7ec:	c8 84       	ldd	r12, Y+8	; 0x08
 7ee:	df 80       	ldd	r13, Y+7	; 0x07
 7f0:	ee 80       	ldd	r14, Y+6	; 0x06
 7f2:	fd 80       	ldd	r15, Y+5	; 0x05
 7f4:	0c 81       	ldd	r16, Y+4	; 0x04
 7f6:	1b 81       	ldd	r17, Y+3	; 0x03
 7f8:	aa 81       	ldd	r26, Y+2	; 0x02
 7fa:	b9 81       	ldd	r27, Y+1	; 0x01
 7fc:	ce 0f       	add	r28, r30
 7fe:	d1 1d       	adc	r29, r1
 800:	0f b6       	in	r0, 0x3f	; 63
 802:	f8 94       	cli
 804:	de bf       	out	0x3e, r29	; 62
 806:	0f be       	out	0x3f, r0	; 63
 808:	cd bf       	out	0x3d, r28	; 61
 80a:	ed 01       	movw	r28, r26
 80c:	08 95       	ret

0000080e <_exit>:
 80e:	f8 94       	cli

00000810 <__stop_program>:
 810:	ff cf       	rjmp	.-2      	; 0x810 <__stop_program>
