
Buffalo-3-SE-Pro-OB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000081a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000081a  000008ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800060  00800060  000008ae  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000008ae  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  000008c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000047a  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000078  00000000  00000000  00000dfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000026e  00000000  00000000  00000e72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	ac 36       	cpi	r26, 0x6C	; 108
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	35 d1       	rcall	.+618    	; 0x2a6 <main>
  3c:	ec c3       	rjmp	.+2008   	; 0x816 <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <cmp_chars>:
  40:	fc 01       	movw	r30, r24
  42:	80 81       	ld	r24, Z
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	fb 01       	movw	r30, r22
  48:	20 81       	ld	r18, Z
  4a:	82 1b       	sub	r24, r18
  4c:	91 09       	sbc	r25, r1
  4e:	08 95       	ret

00000050 <i2cSendByte>:
  50:	0f 93       	push	r16
  52:	1f 93       	push	r17
  54:	cf 93       	push	r28
  56:	df 93       	push	r29
  58:	1f 92       	push	r1
  5a:	cd b7       	in	r28, 0x3d	; 61
  5c:	de b7       	in	r29, 0x3e	; 62
  5e:	08 2f       	mov	r16, r24
  60:	14 2f       	mov	r17, r20
  62:	80 2f       	mov	r24, r16
  64:	69 83       	std	Y+1, r22	; 0x01
  66:	85 d1       	rcall	.+778    	; 0x372 <i2c_start>
  68:	69 81       	ldd	r22, Y+1	; 0x01
  6a:	81 11       	cpse	r24, r1
  6c:	fa cf       	rjmp	.-12     	; 0x62 <i2cSendByte+0x12>
  6e:	86 2f       	mov	r24, r22
  70:	72 d1       	rcall	.+740    	; 0x356 <i2c_write>
  72:	81 2f       	mov	r24, r17
  74:	70 d1       	rcall	.+736    	; 0x356 <i2c_write>
  76:	0f 90       	pop	r0
  78:	df 91       	pop	r29
  7a:	cf 91       	pop	r28
  7c:	1f 91       	pop	r17
  7e:	0f 91       	pop	r16
  80:	55 c1       	rjmp	.+682    	; 0x32c <i2c_stop>

00000082 <i2cReceiveByte>:
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	1f 92       	push	r1
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	18 2f       	mov	r17, r24
  90:	81 2f       	mov	r24, r17
  92:	69 83       	std	Y+1, r22	; 0x01
  94:	6e d1       	rcall	.+732    	; 0x372 <i2c_start>
  96:	69 81       	ldd	r22, Y+1	; 0x01
  98:	88 23       	and	r24, r24
  9a:	39 f0       	breq	.+14     	; 0xaa <i2cReceiveByte+0x28>
  9c:	8f ec       	ldi	r24, 0xCF	; 207
  9e:	97 e0       	ldi	r25, 0x07	; 7
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <i2cReceiveByte+0x1e>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <i2cReceiveByte+0x24>
  a6:	00 00       	nop
  a8:	f3 cf       	rjmp	.-26     	; 0x90 <i2cReceiveByte+0xe>
  aa:	86 2f       	mov	r24, r22
  ac:	54 d1       	rcall	.+680    	; 0x356 <i2c_write>
  ae:	3e d1       	rcall	.+636    	; 0x32c <i2c_stop>
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	81 0f       	add	r24, r17
  b4:	5e d1       	rcall	.+700    	; 0x372 <i2c_start>
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	8d d1       	rcall	.+794    	; 0x3d4 <i2c_read>
  ba:	18 2f       	mov	r17, r24
  bc:	37 d1       	rcall	.+622    	; 0x32c <i2c_stop>
  be:	81 2f       	mov	r24, r17
  c0:	0f 90       	pop	r0
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	1f 91       	pop	r17
  c8:	08 95       	ret

000000ca <setVolume>:
  ca:	cf 93       	push	r28
  cc:	cf e7       	ldi	r28, 0x7F	; 127
  ce:	c8 1b       	sub	r28, r24
  d0:	ce 37       	cpi	r28, 0x7E	; 126
  d2:	08 f0       	brcs	.+2      	; 0xd6 <setVolume+0xc>
  d4:	cf ef       	ldi	r28, 0xFF	; 255
  d6:	80 91 69 00 	lds	r24, 0x0069
  da:	c8 17       	cp	r28, r24
  dc:	21 f0       	breq	.+8      	; 0xe6 <setVolume+0x1c>
  de:	4c 2f       	mov	r20, r28
  e0:	60 e1       	ldi	r22, 0x10	; 16
  e2:	80 e9       	ldi	r24, 0x90	; 144
  e4:	b5 df       	rcall	.-150    	; 0x50 <i2cSendByte>
  e6:	c0 93 69 00 	sts	0x0069, r28
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <getVolume>:
  ee:	e0 e6       	ldi	r30, 0x60	; 96
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	36 9a       	sbi	0x06, 6	; 6
  f4:	36 9b       	sbis	0x06, 6	; 6
  f6:	04 c0       	rjmp	.+8      	; 0x100 <getVolume+0x12>
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	86 95       	lsr	r24
  fc:	80 83       	st	Z, r24
  fe:	fa cf       	rjmp	.-12     	; 0xf4 <getVolume+0x6>
 100:	31 96       	adiw	r30, 0x01	; 1
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	e8 36       	cpi	r30, 0x68	; 104
 106:	f8 07       	cpc	r31, r24
 108:	a1 f7       	brne	.-24     	; 0xf2 <getVolume+0x4>
 10a:	20 e2       	ldi	r18, 0x20	; 32
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	68 e0       	ldi	r22, 0x08	; 8
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	80 e6       	ldi	r24, 0x60	; 96
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	b0 d1       	rcall	.+864    	; 0x47c <qsort>
 11c:	80 91 64 00 	lds	r24, 0x0064
 120:	08 95       	ret

00000122 <configureDAC>:
 122:	80 91 68 00 	lds	r24, 0x0068
 126:	80 ff       	sbrs	r24, 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <configureDAC+0xc>
 12a:	48 e0       	ldi	r20, 0x08	; 8
 12c:	01 c0       	rjmp	.+2      	; 0x130 <configureDAC+0xe>
 12e:	40 e0       	ldi	r20, 0x00	; 0
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	80 e9       	ldi	r24, 0x90	; 144
 134:	8d df       	rcall	.-230    	; 0x50 <i2cSendByte>
 136:	44 e0       	ldi	r20, 0x04	; 4
 138:	61 e0       	ldi	r22, 0x01	; 1
 13a:	80 e9       	ldi	r24, 0x90	; 144
 13c:	89 df       	rcall	.-238    	; 0x50 <i2cSendByte>
 13e:	4c e3       	ldi	r20, 0x3C	; 60
 140:	80 91 6a 00 	lds	r24, 0x006A
 144:	80 fd       	sbrc	r24, 0
 146:	4c e7       	ldi	r20, 0x7C	; 124
 148:	80 91 68 00 	lds	r24, 0x0068
 14c:	28 2f       	mov	r18, r24
 14e:	26 95       	lsr	r18
 150:	23 70       	andi	r18, 0x03	; 3
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	21 30       	cpi	r18, 0x01	; 1
 156:	31 05       	cpc	r19, r1
 158:	29 f0       	breq	.+10     	; 0x164 <configureDAC+0x42>
 15a:	23 30       	cpi	r18, 0x03	; 3
 15c:	31 05       	cpc	r19, r1
 15e:	29 f0       	breq	.+10     	; 0x16a <configureDAC+0x48>
 160:	4c 7f       	andi	r20, 0xFC	; 252
 162:	04 c0       	rjmp	.+8      	; 0x16c <configureDAC+0x4a>
 164:	4c 7f       	andi	r20, 0xFC	; 252
 166:	41 60       	ori	r20, 0x01	; 1
 168:	01 c0       	rjmp	.+2      	; 0x16c <configureDAC+0x4a>
 16a:	43 60       	ori	r20, 0x03	; 3
 16c:	86 95       	lsr	r24
 16e:	86 95       	lsr	r24
 170:	86 95       	lsr	r24
 172:	83 70       	andi	r24, 0x03	; 3
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	91 05       	cpc	r25, r1
 17a:	21 f0       	breq	.+8      	; 0x184 <configureDAC+0x62>
 17c:	02 97       	sbiw	r24, 0x02	; 2
 17e:	39 f0       	breq	.+14     	; 0x18e <configureDAC+0x6c>
 180:	4c 63       	ori	r20, 0x3C	; 60
 182:	06 c0       	rjmp	.+12     	; 0x190 <configureDAC+0x6e>
 184:	43 7f       	andi	r20, 0xF3	; 243
 186:	44 60       	ori	r20, 0x04	; 4
 188:	4f 7c       	andi	r20, 0xCF	; 207
 18a:	40 61       	ori	r20, 0x10	; 16
 18c:	01 c0       	rjmp	.+2      	; 0x190 <configureDAC+0x6e>
 18e:	43 7c       	andi	r20, 0xC3	; 195
 190:	62 e0       	ldi	r22, 0x02	; 2
 192:	80 e9       	ldi	r24, 0x90	; 144
 194:	5d df       	rcall	.-326    	; 0x50 <i2cSendByte>
 196:	80 91 6a 00 	lds	r24, 0x006A
 19a:	80 fd       	sbrc	r24, 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <configureDAC+0x80>
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	01 c0       	rjmp	.+2      	; 0x1a4 <configureDAC+0x82>
 1a2:	44 e0       	ldi	r20, 0x04	; 4
 1a4:	64 e0       	ldi	r22, 0x04	; 4
 1a6:	80 e9       	ldi	r24, 0x90	; 144
 1a8:	53 df       	rcall	.-346    	; 0x50 <i2cSendByte>
 1aa:	40 91 68 00 	lds	r20, 0x0068
 1ae:	80 91 6a 00 	lds	r24, 0x006A
 1b2:	86 95       	lsr	r24
 1b4:	86 70       	andi	r24, 0x06	; 6
 1b6:	40 7e       	andi	r20, 0xE0	; 224
 1b8:	48 2b       	or	r20, r24
 1ba:	67 e0       	ldi	r22, 0x07	; 7
 1bc:	80 e9       	ldi	r24, 0x90	; 144
 1be:	48 df       	rcall	.-368    	; 0x50 <i2cSendByte>
 1c0:	40 e8       	ldi	r20, 0x80	; 128
 1c2:	68 e0       	ldi	r22, 0x08	; 8
 1c4:	80 e9       	ldi	r24, 0x90	; 144
 1c6:	44 df       	rcall	.-376    	; 0x50 <i2cSendByte>
 1c8:	48 e1       	ldi	r20, 0x18	; 24
 1ca:	69 e0       	ldi	r22, 0x09	; 9
 1cc:	80 e9       	ldi	r24, 0x90	; 144
 1ce:	40 df       	rcall	.-384    	; 0x50 <i2cSendByte>
 1d0:	40 e3       	ldi	r20, 0x30	; 48
 1d2:	6b e0       	ldi	r22, 0x0B	; 11
 1d4:	80 e9       	ldi	r24, 0x90	; 144
 1d6:	3c df       	rcall	.-392    	; 0x50 <i2cSendByte>
 1d8:	80 91 6a 00 	lds	r24, 0x006A
 1dc:	82 95       	swap	r24
 1de:	8f 70       	andi	r24, 0x0F	; 15
 1e0:	09 f4       	brne	.+2      	; 0x1e4 <configureDAC+0xc2>
 1e2:	85 e0       	ldi	r24, 0x05	; 5
 1e4:	48 2f       	mov	r20, r24
 1e6:	42 95       	swap	r20
 1e8:	40 7f       	andi	r20, 0xF0	; 240
 1ea:	48 2b       	or	r20, r24
 1ec:	6c e0       	ldi	r22, 0x0C	; 12
 1ee:	80 e9       	ldi	r24, 0x90	; 144
 1f0:	2f df       	rcall	.-418    	; 0x50 <i2cSendByte>
 1f2:	40 e2       	ldi	r20, 0x20	; 32
 1f4:	6d e0       	ldi	r22, 0x0D	; 13
 1f6:	80 e9       	ldi	r24, 0x90	; 144
 1f8:	2b df       	rcall	.-426    	; 0x50 <i2cSendByte>
 1fa:	4f e0       	ldi	r20, 0x0F	; 15
 1fc:	6f e0       	ldi	r22, 0x0F	; 15
 1fe:	80 e9       	ldi	r24, 0x90	; 144
 200:	27 df       	rcall	.-434    	; 0x50 <i2cSendByte>
 202:	80 91 6a 00 	lds	r24, 0x006A
 206:	81 ff       	sbrs	r24, 1
 208:	02 c0       	rjmp	.+4      	; 0x20e <configureDAC+0xec>
 20a:	40 e8       	ldi	r20, 0x80	; 128
 20c:	01 c0       	rjmp	.+2      	; 0x210 <configureDAC+0xee>
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	65 e2       	ldi	r22, 0x25	; 37
 212:	80 e9       	ldi	r24, 0x90	; 144
 214:	1d cf       	rjmp	.-454    	; 0x50 <i2cSendByte>

00000216 <readSwitchStates>:
 216:	cf 93       	push	r28
 218:	62 e1       	ldi	r22, 0x12	; 18
 21a:	80 e4       	ldi	r24, 0x40	; 64
 21c:	32 df       	rcall	.-412    	; 0x82 <i2cReceiveByte>
 21e:	c8 2f       	mov	r28, r24
 220:	63 e1       	ldi	r22, 0x13	; 19
 222:	80 e4       	ldi	r24, 0x40	; 64
 224:	2e df       	rcall	.-420    	; 0x82 <i2cReceiveByte>
 226:	90 91 68 00 	lds	r25, 0x0068
 22a:	c9 13       	cpse	r28, r25
 22c:	04 c0       	rjmp	.+8      	; 0x236 <readSwitchStates+0x20>
 22e:	90 91 6a 00 	lds	r25, 0x006A
 232:	89 17       	cp	r24, r25
 234:	31 f0       	breq	.+12     	; 0x242 <readSwitchStates+0x2c>
 236:	c0 93 68 00 	sts	0x0068, r28
 23a:	80 93 6a 00 	sts	0x006A, r24
 23e:	cf 91       	pop	r28
 240:	70 cf       	rjmp	.-288    	; 0x122 <configureDAC>
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <initialize>:
 246:	bc 98       	cbi	0x17, 4	; 23
 248:	c4 98       	cbi	0x18, 4	; 24
 24a:	16 b8       	out	0x06, r1	; 6
 24c:	17 b8       	out	0x07, r1	; 7
 24e:	3d 9a       	sbi	0x07, 5	; 7
 250:	38 98       	cbi	0x07, 0	; 7
 252:	39 9a       	sbi	0x07, 1	; 7
 254:	3a 98       	cbi	0x07, 2	; 7
 256:	3b 98       	cbi	0x07, 3	; 7
 258:	3e 98       	cbi	0x07, 6	; 7
 25a:	3f 98       	cbi	0x07, 7	; 7
 25c:	37 98       	cbi	0x06, 7	; 6
 25e:	32 9a       	sbi	0x06, 2	; 6
 260:	31 9a       	sbi	0x06, 1	; 6
 262:	30 9a       	sbi	0x06, 0	; 6
 264:	37 9a       	sbi	0x06, 7	; 6
 266:	3c d0       	rcall	.+120    	; 0x2e0 <i2c_init>
 268:	8f ec       	ldi	r24, 0xCF	; 207
 26a:	97 e0       	ldi	r25, 0x07	; 7
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <__stack+0xd>
 270:	00 c0       	rjmp	.+0      	; 0x272 <__stack+0x13>
 272:	00 00       	nop
 274:	40 e2       	ldi	r20, 0x20	; 32
 276:	6a e0       	ldi	r22, 0x0A	; 10
 278:	80 e4       	ldi	r24, 0x40	; 64
 27a:	ea de       	rcall	.-556    	; 0x50 <i2cSendByte>
 27c:	8f ec       	ldi	r24, 0xCF	; 207
 27e:	97 e0       	ldi	r25, 0x07	; 7
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <__stack+0x21>
 284:	00 c0       	rjmp	.+0      	; 0x286 <__stack+0x27>
 286:	00 00       	nop
 288:	4f ef       	ldi	r20, 0xFF	; 255
 28a:	6c e0       	ldi	r22, 0x0C	; 12
 28c:	80 e4       	ldi	r24, 0x40	; 64
 28e:	e0 de       	rcall	.-576    	; 0x50 <i2cSendByte>
 290:	4f ef       	ldi	r20, 0xFF	; 255
 292:	6d e0       	ldi	r22, 0x0D	; 13
 294:	80 e4       	ldi	r24, 0x40	; 64
 296:	dc de       	rcall	.-584    	; 0x50 <i2cSendByte>
 298:	8f e1       	ldi	r24, 0x1F	; 31
 29a:	9e e4       	ldi	r25, 0x4E	; 78
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <__stack+0x3d>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <__stack+0x43>
 2a2:	00 00       	nop
 2a4:	b8 cf       	rjmp	.-144    	; 0x216 <readSwitchStates>

000002a6 <main>:
 2a6:	b9 9a       	sbi	0x17, 1	; 23
 2a8:	c1 98       	cbi	0x18, 1	; 24
 2aa:	2f ef       	ldi	r18, 0xFF	; 255
 2ac:	8e e9       	ldi	r24, 0x9E	; 158
 2ae:	94 e2       	ldi	r25, 0x24	; 36
 2b0:	21 50       	subi	r18, 0x01	; 1
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	90 40       	sbci	r25, 0x00	; 0
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <main+0xa>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x14>
 2ba:	00 00       	nop
 2bc:	c1 9a       	sbi	0x18, 1	; 24
 2be:	c3 df       	rcall	.-122    	; 0x246 <initialize>
 2c0:	30 df       	rcall	.-416    	; 0x122 <configureDAC>
 2c2:	c0 e0       	ldi	r28, 0x00	; 0
 2c4:	14 df       	rcall	.-472    	; 0xee <getVolume>
 2c6:	01 df       	rcall	.-510    	; 0xca <setVolume>
 2c8:	8f e5       	ldi	r24, 0x5F	; 95
 2ca:	9a ee       	ldi	r25, 0xEA	; 234
 2cc:	01 97       	sbiw	r24, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <main+0x26>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0x2c>
 2d2:	00 00       	nop
 2d4:	ca 30       	cpi	r28, 0x0A	; 10
 2d6:	11 f4       	brne	.+4      	; 0x2dc <main+0x36>
 2d8:	9e df       	rcall	.-196    	; 0x216 <readSwitchStates>
 2da:	c0 e0       	ldi	r28, 0x00	; 0
 2dc:	cf 5f       	subi	r28, 0xFF	; 255
 2de:	f2 cf       	rjmp	.-28     	; 0x2c4 <main+0x1e>

000002e0 <i2c_init>:
 2e0:	c0 9a       	sbi	0x18, 0	; 24
 2e2:	c2 9a       	sbi	0x18, 2	; 24
 2e4:	ba 9a       	sbi	0x17, 2	; 23
 2e6:	b8 9a       	sbi	0x17, 0	; 23
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	8f b9       	out	0x0f, r24	; 15
 2ec:	8a e2       	ldi	r24, 0x2A	; 42
 2ee:	8d b9       	out	0x0d, r24	; 13
 2f0:	80 ef       	ldi	r24, 0xF0	; 240
 2f2:	8e b9       	out	0x0e, r24	; 14
 2f4:	08 95       	ret

000002f6 <i2c_get_state_info>:
 2f6:	80 91 6b 00 	lds	r24, 0x006B
 2fa:	08 95       	ret

000002fc <USI_I2C_Master_Transfer>:
 2fc:	8e b9       	out	0x0e, r24	; 14
 2fe:	8b e2       	ldi	r24, 0x2B	; 43
 300:	93 e0       	ldi	r25, 0x03	; 3
 302:	9a 95       	dec	r25
 304:	f1 f7       	brne	.-4      	; 0x302 <USI_I2C_Master_Transfer+0x6>
 306:	00 c0       	rjmp	.+0      	; 0x308 <USI_I2C_Master_Transfer+0xc>
 308:	8d b9       	out	0x0d, r24	; 13
 30a:	b2 9b       	sbis	0x16, 2	; 22
 30c:	fe cf       	rjmp	.-4      	; 0x30a <USI_I2C_Master_Transfer+0xe>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <USI_I2C_Master_Transfer+0x14>
 310:	00 c0       	rjmp	.+0      	; 0x312 <USI_I2C_Master_Transfer+0x16>
 312:	00 00       	nop
 314:	8d b9       	out	0x0d, r24	; 13
 316:	76 9b       	sbis	0x0e, 6	; 14
 318:	f3 cf       	rjmp	.-26     	; 0x300 <USI_I2C_Master_Transfer+0x4>
 31a:	83 e0       	ldi	r24, 0x03	; 3
 31c:	8a 95       	dec	r24
 31e:	f1 f7       	brne	.-4      	; 0x31c <USI_I2C_Master_Transfer+0x20>
 320:	00 c0       	rjmp	.+0      	; 0x322 <USI_I2C_Master_Transfer+0x26>
 322:	8f b1       	in	r24, 0x0f	; 15
 324:	9f ef       	ldi	r25, 0xFF	; 255
 326:	9f b9       	out	0x0f, r25	; 15
 328:	b8 9a       	sbi	0x17, 0	; 23
 32a:	08 95       	ret

0000032c <i2c_stop>:
 32c:	c0 98       	cbi	0x18, 0	; 24
 32e:	c2 9a       	sbi	0x18, 2	; 24
 330:	b2 9b       	sbis	0x16, 2	; 22
 332:	fe cf       	rjmp	.-4      	; 0x330 <i2c_stop+0x4>
 334:	00 c0       	rjmp	.+0      	; 0x336 <i2c_stop+0xa>
 336:	00 c0       	rjmp	.+0      	; 0x338 <i2c_stop+0xc>
 338:	00 00       	nop
 33a:	c0 9a       	sbi	0x18, 0	; 24
 33c:	83 e0       	ldi	r24, 0x03	; 3
 33e:	8a 95       	dec	r24
 340:	f1 f7       	brne	.-4      	; 0x33e <i2c_stop+0x12>
 342:	00 c0       	rjmp	.+0      	; 0x344 <i2c_stop+0x18>
 344:	75 99       	sbic	0x0e, 5	; 14
 346:	05 c0       	rjmp	.+10     	; 0x352 <i2c_stop+0x26>
 348:	84 e0       	ldi	r24, 0x04	; 4
 34a:	80 93 6b 00 	sts	0x006B, r24
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	08 95       	ret
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	08 95       	ret

00000356 <i2c_write>:
 356:	b8 9a       	sbi	0x17, 0	; 23
 358:	c2 98       	cbi	0x18, 2	; 24
 35a:	8f b9       	out	0x0f, r24	; 15
 35c:	80 ef       	ldi	r24, 0xF0	; 240
 35e:	ce df       	rcall	.-100    	; 0x2fc <USI_I2C_Master_Transfer>
 360:	b8 98       	cbi	0x17, 0	; 23
 362:	8e ef       	ldi	r24, 0xFE	; 254
 364:	cb df       	rcall	.-106    	; 0x2fc <USI_I2C_Master_Transfer>
 366:	88 23       	and	r24, r24
 368:	19 f0       	breq	.+6      	; 0x370 <i2c_write+0x1a>
 36a:	92 e0       	ldi	r25, 0x02	; 2
 36c:	90 93 6b 00 	sts	0x006B, r25
 370:	08 95       	ret

00000372 <i2c_start>:
 372:	c2 9a       	sbi	0x18, 2	; 24
 374:	c2 9b       	sbis	0x18, 2	; 24
 376:	fe cf       	rjmp	.-4      	; 0x374 <i2c_start+0x2>
 378:	93 e0       	ldi	r25, 0x03	; 3
 37a:	9a 95       	dec	r25
 37c:	f1 f7       	brne	.-4      	; 0x37a <i2c_start+0x8>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <i2c_start+0xe>
 380:	c0 98       	cbi	0x18, 0	; 24
 382:	00 c0       	rjmp	.+0      	; 0x384 <i2c_start+0x12>
 384:	00 c0       	rjmp	.+0      	; 0x386 <i2c_start+0x14>
 386:	00 00       	nop
 388:	c2 98       	cbi	0x18, 2	; 24
 38a:	00 c0       	rjmp	.+0      	; 0x38c <i2c_start+0x1a>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <i2c_start+0x1c>
 38e:	00 00       	nop
 390:	c0 9a       	sbi	0x18, 0	; 24
 392:	77 99       	sbic	0x0e, 7	; 14
 394:	05 c0       	rjmp	.+10     	; 0x3a0 <i2c_start+0x2e>
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	80 93 6b 00 	sts	0x006B, r24
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	08 95       	ret
 3a0:	da df       	rcall	.-76     	; 0x356 <i2c_write>
 3a2:	81 11       	cpse	r24, r1
 3a4:	04 c0       	rjmp	.+8      	; 0x3ae <i2c_start+0x3c>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	80 93 6b 00 	sts	0x006B, r24
 3ac:	08 95       	ret
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	08 95       	ret

000003b2 <i2c_start_wait>:
 3b2:	cf 93       	push	r28
 3b4:	c8 2f       	mov	r28, r24
 3b6:	dd df       	rcall	.-70     	; 0x372 <i2c_start>
 3b8:	81 30       	cpi	r24, 0x01	; 1
 3ba:	49 f4       	brne	.+18     	; 0x3ce <i2c_start_wait+0x1c>
 3bc:	b7 df       	rcall	.-146    	; 0x32c <i2c_stop>
 3be:	8f e1       	ldi	r24, 0x1F	; 31
 3c0:	9e e4       	ldi	r25, 0x4E	; 78
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <i2c_start_wait+0x10>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <i2c_start_wait+0x16>
 3c8:	00 00       	nop
 3ca:	8c 2f       	mov	r24, r28
 3cc:	f2 df       	rcall	.-28     	; 0x3b2 <i2c_start_wait>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	cf 91       	pop	r28
 3d2:	08 95       	ret

000003d4 <i2c_read>:
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	d8 2f       	mov	r29, r24
 3da:	b8 98       	cbi	0x17, 0	; 23
 3dc:	c2 98       	cbi	0x18, 2	; 24
 3de:	1f b8       	out	0x0f, r1	; 15
 3e0:	80 ef       	ldi	r24, 0xF0	; 240
 3e2:	8c df       	rcall	.-232    	; 0x2fc <USI_I2C_Master_Transfer>
 3e4:	c8 2f       	mov	r28, r24
 3e6:	b8 9a       	sbi	0x17, 0	; 23
 3e8:	d1 11       	cpse	r29, r1
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <i2c_read+0x1c>
 3ec:	1f b8       	out	0x0f, r1	; 15
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <i2c_read+0x20>
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	8f b9       	out	0x0f, r24	; 15
 3f4:	8e ef       	ldi	r24, 0xFE	; 254
 3f6:	82 df       	rcall	.-252    	; 0x2fc <USI_I2C_Master_Transfer>
 3f8:	8c 2f       	mov	r24, r28
 3fa:	df 91       	pop	r29
 3fc:	cf 91       	pop	r28
 3fe:	08 95       	ret

00000400 <swapfunc>:
 400:	dc 01       	movw	r26, r24
 402:	fb 01       	movw	r30, r22
 404:	8c 91       	ld	r24, X
 406:	90 81       	ld	r25, Z
 408:	9d 93       	st	X+, r25
 40a:	81 93       	st	Z+, r24
 40c:	41 50       	subi	r20, 0x01	; 1
 40e:	51 09       	sbc	r21, r1
 410:	14 16       	cp	r1, r20
 412:	15 06       	cpc	r1, r21
 414:	bc f3       	brlt	.-18     	; 0x404 <swapfunc+0x4>
 416:	08 95       	ret

00000418 <med3>:
 418:	a0 e0       	ldi	r26, 0x00	; 0
 41a:	b0 e0       	ldi	r27, 0x00	; 0
 41c:	e1 e1       	ldi	r30, 0x11	; 17
 41e:	f2 e0       	ldi	r31, 0x02	; 2
 420:	cd c1       	rjmp	.+922    	; 0x7bc <__prologue_saves__+0x14>
 422:	6c 01       	movw	r12, r24
 424:	7b 01       	movw	r14, r22
 426:	8a 01       	movw	r16, r20
 428:	e9 01       	movw	r28, r18
 42a:	f9 01       	movw	r30, r18
 42c:	09 95       	icall
 42e:	b8 01       	movw	r22, r16
 430:	97 ff       	sbrs	r25, 7
 432:	0f c0       	rjmp	.+30     	; 0x452 <med3+0x3a>
 434:	c7 01       	movw	r24, r14
 436:	fe 01       	movw	r30, r28
 438:	09 95       	icall
 43a:	97 fd       	sbrc	r25, 7
 43c:	08 c0       	rjmp	.+16     	; 0x44e <med3+0x36>
 43e:	b8 01       	movw	r22, r16
 440:	c6 01       	movw	r24, r12
 442:	fe 01       	movw	r30, r28
 444:	09 95       	icall
 446:	97 fd       	sbrc	r25, 7
 448:	14 c0       	rjmp	.+40     	; 0x472 <med3+0x5a>
 44a:	86 01       	movw	r16, r12
 44c:	12 c0       	rjmp	.+36     	; 0x472 <med3+0x5a>
 44e:	87 01       	movw	r16, r14
 450:	10 c0       	rjmp	.+32     	; 0x472 <med3+0x5a>
 452:	c7 01       	movw	r24, r14
 454:	fe 01       	movw	r30, r28
 456:	09 95       	icall
 458:	18 16       	cp	r1, r24
 45a:	19 06       	cpc	r1, r25
 45c:	44 f0       	brlt	.+16     	; 0x46e <med3+0x56>
 45e:	b8 01       	movw	r22, r16
 460:	c6 01       	movw	r24, r12
 462:	fe 01       	movw	r30, r28
 464:	09 95       	icall
 466:	97 ff       	sbrs	r25, 7
 468:	04 c0       	rjmp	.+8      	; 0x472 <med3+0x5a>
 46a:	c6 01       	movw	r24, r12
 46c:	03 c0       	rjmp	.+6      	; 0x474 <med3+0x5c>
 46e:	c7 01       	movw	r24, r14
 470:	01 c0       	rjmp	.+2      	; 0x474 <med3+0x5c>
 472:	c8 01       	movw	r24, r16
 474:	cd b7       	in	r28, 0x3d	; 61
 476:	de b7       	in	r29, 0x3e	; 62
 478:	e8 e0       	ldi	r30, 0x08	; 8
 47a:	bc c1       	rjmp	.+888    	; 0x7f4 <__epilogue_restores__+0x14>

0000047c <qsort>:
 47c:	a8 e0       	ldi	r26, 0x08	; 8
 47e:	b0 e0       	ldi	r27, 0x00	; 0
 480:	e3 e4       	ldi	r30, 0x43	; 67
 482:	f2 e0       	ldi	r31, 0x02	; 2
 484:	91 c1       	rjmp	.+802    	; 0x7a8 <__prologue_saves__>
 486:	8c 01       	movw	r16, r24
 488:	7b 01       	movw	r14, r22
 48a:	58 87       	std	Y+8, r21	; 0x08
 48c:	4f 83       	std	Y+7, r20	; 0x07
 48e:	69 01       	movw	r12, r18
 490:	4f 80       	ldd	r4, Y+7	; 0x07
 492:	58 84       	ldd	r5, Y+8	; 0x08
 494:	40 0e       	add	r4, r16
 496:	51 1e       	adc	r5, r17
 498:	47 e0       	ldi	r20, 0x07	; 7
 49a:	e4 16       	cp	r14, r20
 49c:	f1 04       	cpc	r15, r1
 49e:	40 f5       	brcc	.+80     	; 0x4f0 <qsort+0x74>
 4a0:	42 01       	movw	r8, r4
 4a2:	c7 01       	movw	r24, r14
 4a4:	6f 81       	ldd	r22, Y+7	; 0x07
 4a6:	78 85       	ldd	r23, Y+8	; 0x08
 4a8:	5a d1       	rcall	.+692    	; 0x75e <__mulhi3>
 4aa:	58 01       	movw	r10, r16
 4ac:	a8 0e       	add	r10, r24
 4ae:	b9 1e       	adc	r11, r25
 4b0:	8a 14       	cp	r8, r10
 4b2:	9b 04       	cpc	r9, r11
 4b4:	08 f0       	brcs	.+2      	; 0x4b8 <qsort+0x3c>
 4b6:	50 c1       	rjmp	.+672    	; 0x758 <qsort+0x2dc>
 4b8:	34 01       	movw	r6, r8
 4ba:	06 15       	cp	r16, r6
 4bc:	17 05       	cpc	r17, r7
 4be:	98 f4       	brcc	.+38     	; 0x4e6 <qsort+0x6a>
 4c0:	73 01       	movw	r14, r6
 4c2:	6f 81       	ldd	r22, Y+7	; 0x07
 4c4:	78 85       	ldd	r23, Y+8	; 0x08
 4c6:	e6 1a       	sub	r14, r22
 4c8:	f7 0a       	sbc	r15, r23
 4ca:	b3 01       	movw	r22, r6
 4cc:	c7 01       	movw	r24, r14
 4ce:	f6 01       	movw	r30, r12
 4d0:	09 95       	icall
 4d2:	18 16       	cp	r1, r24
 4d4:	19 06       	cpc	r1, r25
 4d6:	3c f4       	brge	.+14     	; 0x4e6 <qsort+0x6a>
 4d8:	4f 81       	ldd	r20, Y+7	; 0x07
 4da:	58 85       	ldd	r21, Y+8	; 0x08
 4dc:	b7 01       	movw	r22, r14
 4de:	c3 01       	movw	r24, r6
 4e0:	8f df       	rcall	.-226    	; 0x400 <swapfunc>
 4e2:	37 01       	movw	r6, r14
 4e4:	ea cf       	rjmp	.-44     	; 0x4ba <qsort+0x3e>
 4e6:	4f 81       	ldd	r20, Y+7	; 0x07
 4e8:	58 85       	ldd	r21, Y+8	; 0x08
 4ea:	84 0e       	add	r8, r20
 4ec:	95 1e       	adc	r9, r21
 4ee:	e0 cf       	rjmp	.-64     	; 0x4b0 <qsort+0x34>
 4f0:	c7 01       	movw	r24, r14
 4f2:	96 95       	lsr	r25
 4f4:	87 95       	ror	r24
 4f6:	6f 81       	ldd	r22, Y+7	; 0x07
 4f8:	78 85       	ldd	r23, Y+8	; 0x08
 4fa:	31 d1       	rcall	.+610    	; 0x75e <__mulhi3>
 4fc:	58 01       	movw	r10, r16
 4fe:	a8 0e       	add	r10, r24
 500:	b9 1e       	adc	r11, r25
 502:	b7 01       	movw	r22, r14
 504:	61 50       	subi	r22, 0x01	; 1
 506:	71 09       	sbc	r23, r1
 508:	7c 83       	std	Y+4, r23	; 0x04
 50a:	6b 83       	std	Y+3, r22	; 0x03
 50c:	77 e0       	ldi	r23, 0x07	; 7
 50e:	e7 16       	cp	r14, r23
 510:	f1 04       	cpc	r15, r1
 512:	09 f4       	brne	.+2      	; 0x516 <qsort+0x9a>
 514:	49 c0       	rjmp	.+146    	; 0x5a8 <qsort+0x12c>
 516:	8b 81       	ldd	r24, Y+3	; 0x03
 518:	9c 81       	ldd	r25, Y+4	; 0x04
 51a:	6f 81       	ldd	r22, Y+7	; 0x07
 51c:	78 85       	ldd	r23, Y+8	; 0x08
 51e:	1f d1       	rcall	.+574    	; 0x75e <__mulhi3>
 520:	38 01       	movw	r6, r16
 522:	68 0e       	add	r6, r24
 524:	79 1e       	adc	r7, r25
 526:	89 e2       	ldi	r24, 0x29	; 41
 528:	e8 16       	cp	r14, r24
 52a:	f1 04       	cpc	r15, r1
 52c:	a0 f1       	brcs	.+104    	; 0x596 <qsort+0x11a>
 52e:	c7 01       	movw	r24, r14
 530:	23 e0       	ldi	r18, 0x03	; 3
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	2a 95       	dec	r18
 538:	e1 f7       	brne	.-8      	; 0x532 <qsort+0xb6>
 53a:	6f 81       	ldd	r22, Y+7	; 0x07
 53c:	78 85       	ldd	r23, Y+8	; 0x08
 53e:	0f d1       	rcall	.+542    	; 0x75e <__mulhi3>
 540:	4c 01       	movw	r8, r24
 542:	fc 01       	movw	r30, r24
 544:	ee 0f       	add	r30, r30
 546:	ff 1f       	adc	r31, r31
 548:	fa 83       	std	Y+2, r31	; 0x02
 54a:	e9 83       	std	Y+1, r30	; 0x01
 54c:	af 01       	movw	r20, r30
 54e:	40 0f       	add	r20, r16
 550:	51 1f       	adc	r21, r17
 552:	b8 01       	movw	r22, r16
 554:	68 0f       	add	r22, r24
 556:	79 1f       	adc	r23, r25
 558:	96 01       	movw	r18, r12
 55a:	c8 01       	movw	r24, r16
 55c:	5d df       	rcall	.-326    	; 0x418 <med3>
 55e:	38 2e       	mov	r3, r24
 560:	29 2e       	mov	r2, r25
 562:	a5 01       	movw	r20, r10
 564:	48 0d       	add	r20, r8
 566:	59 1d       	adc	r21, r9
 568:	91 94       	neg	r9
 56a:	81 94       	neg	r8
 56c:	91 08       	sbc	r9, r1
 56e:	96 01       	movw	r18, r12
 570:	b5 01       	movw	r22, r10
 572:	c5 01       	movw	r24, r10
 574:	88 0d       	add	r24, r8
 576:	99 1d       	adc	r25, r9
 578:	4f df       	rcall	.-354    	; 0x418 <med3>
 57a:	5c 01       	movw	r10, r24
 57c:	b3 01       	movw	r22, r6
 57e:	68 0d       	add	r22, r8
 580:	79 1d       	adc	r23, r9
 582:	96 01       	movw	r18, r12
 584:	a3 01       	movw	r20, r6
 586:	c3 01       	movw	r24, r6
 588:	e9 81       	ldd	r30, Y+1	; 0x01
 58a:	fa 81       	ldd	r31, Y+2	; 0x02
 58c:	8e 1b       	sub	r24, r30
 58e:	9f 0b       	sbc	r25, r31
 590:	43 df       	rcall	.-378    	; 0x418 <med3>
 592:	3c 01       	movw	r6, r24
 594:	02 c0       	rjmp	.+4      	; 0x59a <qsort+0x11e>
 596:	30 2e       	mov	r3, r16
 598:	21 2e       	mov	r2, r17
 59a:	96 01       	movw	r18, r12
 59c:	a3 01       	movw	r20, r6
 59e:	b5 01       	movw	r22, r10
 5a0:	83 2d       	mov	r24, r3
 5a2:	92 2d       	mov	r25, r2
 5a4:	39 df       	rcall	.-398    	; 0x418 <med3>
 5a6:	5c 01       	movw	r10, r24
 5a8:	4f 81       	ldd	r20, Y+7	; 0x07
 5aa:	58 85       	ldd	r21, Y+8	; 0x08
 5ac:	b5 01       	movw	r22, r10
 5ae:	c8 01       	movw	r24, r16
 5b0:	27 df       	rcall	.-434    	; 0x400 <swapfunc>
 5b2:	42 01       	movw	r8, r4
 5b4:	8b 81       	ldd	r24, Y+3	; 0x03
 5b6:	9c 81       	ldd	r25, Y+4	; 0x04
 5b8:	6f 81       	ldd	r22, Y+7	; 0x07
 5ba:	78 85       	ldd	r23, Y+8	; 0x08
 5bc:	d0 d0       	rcall	.+416    	; 0x75e <__mulhi3>
 5be:	38 01       	movw	r6, r16
 5c0:	68 0e       	add	r6, r24
 5c2:	79 1e       	adc	r7, r25
 5c4:	23 01       	movw	r4, r6
 5c6:	54 01       	movw	r10, r8
 5c8:	14 01       	movw	r2, r8
 5ca:	20 e0       	ldi	r18, 0x00	; 0
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	6a 14       	cp	r6, r10
 5d0:	7b 04       	cpc	r7, r11
 5d2:	e8 f1       	brcs	.+122    	; 0x64e <qsort+0x1d2>
 5d4:	b8 01       	movw	r22, r16
 5d6:	c5 01       	movw	r24, r10
 5d8:	2d 83       	std	Y+5, r18	; 0x05
 5da:	3e 83       	std	Y+6, r19	; 0x06
 5dc:	f6 01       	movw	r30, r12
 5de:	09 95       	icall
 5e0:	2d 81       	ldd	r18, Y+5	; 0x05
 5e2:	3e 81       	ldd	r19, Y+6	; 0x06
 5e4:	18 16       	cp	r1, r24
 5e6:	19 06       	cpc	r1, r25
 5e8:	94 f1       	brlt	.+100    	; 0x64e <qsort+0x1d2>
 5ea:	89 2b       	or	r24, r25
 5ec:	59 f4       	brne	.+22     	; 0x604 <qsort+0x188>
 5ee:	4f 81       	ldd	r20, Y+7	; 0x07
 5f0:	58 85       	ldd	r21, Y+8	; 0x08
 5f2:	b5 01       	movw	r22, r10
 5f4:	c1 01       	movw	r24, r2
 5f6:	04 df       	rcall	.-504    	; 0x400 <swapfunc>
 5f8:	4f 81       	ldd	r20, Y+7	; 0x07
 5fa:	58 85       	ldd	r21, Y+8	; 0x08
 5fc:	24 0e       	add	r2, r20
 5fe:	35 1e       	adc	r3, r21
 600:	21 e0       	ldi	r18, 0x01	; 1
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	6f 81       	ldd	r22, Y+7	; 0x07
 606:	78 85       	ldd	r23, Y+8	; 0x08
 608:	a6 0e       	add	r10, r22
 60a:	b7 1e       	adc	r11, r23
 60c:	e0 cf       	rjmp	.-64     	; 0x5ce <qsort+0x152>
 60e:	b8 01       	movw	r22, r16
 610:	c3 01       	movw	r24, r6
 612:	2d 83       	std	Y+5, r18	; 0x05
 614:	3e 83       	std	Y+6, r19	; 0x06
 616:	f6 01       	movw	r30, r12
 618:	09 95       	icall
 61a:	a3 01       	movw	r20, r6
 61c:	6f 81       	ldd	r22, Y+7	; 0x07
 61e:	78 85       	ldd	r23, Y+8	; 0x08
 620:	46 1b       	sub	r20, r22
 622:	57 0b       	sbc	r21, r23
 624:	5a 83       	std	Y+2, r21	; 0x02
 626:	49 83       	std	Y+1, r20	; 0x01
 628:	2d 81       	ldd	r18, Y+5	; 0x05
 62a:	3e 81       	ldd	r19, Y+6	; 0x06
 62c:	97 fd       	sbrc	r25, 7
 62e:	13 c0       	rjmp	.+38     	; 0x656 <qsort+0x1da>
 630:	89 2b       	or	r24, r25
 632:	59 f4       	brne	.+22     	; 0x64a <qsort+0x1ce>
 634:	4f 81       	ldd	r20, Y+7	; 0x07
 636:	58 85       	ldd	r21, Y+8	; 0x08
 638:	b2 01       	movw	r22, r4
 63a:	c3 01       	movw	r24, r6
 63c:	e1 de       	rcall	.-574    	; 0x400 <swapfunc>
 63e:	4f 81       	ldd	r20, Y+7	; 0x07
 640:	58 85       	ldd	r21, Y+8	; 0x08
 642:	44 1a       	sub	r4, r20
 644:	55 0a       	sbc	r5, r21
 646:	21 e0       	ldi	r18, 0x01	; 1
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	69 80       	ldd	r6, Y+1	; 0x01
 64c:	7a 80       	ldd	r7, Y+2	; 0x02
 64e:	6a 14       	cp	r6, r10
 650:	7b 04       	cpc	r7, r11
 652:	e8 f6       	brcc	.-70     	; 0x60e <qsort+0x192>
 654:	0e c0       	rjmp	.+28     	; 0x672 <qsort+0x1f6>
 656:	4f 81       	ldd	r20, Y+7	; 0x07
 658:	58 85       	ldd	r21, Y+8	; 0x08
 65a:	b3 01       	movw	r22, r6
 65c:	c5 01       	movw	r24, r10
 65e:	d0 de       	rcall	.-608    	; 0x400 <swapfunc>
 660:	4f 81       	ldd	r20, Y+7	; 0x07
 662:	58 85       	ldd	r21, Y+8	; 0x08
 664:	a4 0e       	add	r10, r20
 666:	b5 1e       	adc	r11, r21
 668:	69 80       	ldd	r6, Y+1	; 0x01
 66a:	7a 80       	ldd	r7, Y+2	; 0x02
 66c:	21 e0       	ldi	r18, 0x01	; 1
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	ae cf       	rjmp	.-164    	; 0x5ce <qsort+0x152>
 672:	c7 01       	movw	r24, r14
 674:	6f 81       	ldd	r22, Y+7	; 0x07
 676:	78 85       	ldd	r23, Y+8	; 0x08
 678:	72 d0       	rcall	.+228    	; 0x75e <__mulhi3>
 67a:	23 2b       	or	r18, r19
 67c:	09 f4       	brne	.+2      	; 0x680 <qsort+0x204>
 67e:	4a c0       	rjmp	.+148    	; 0x714 <qsort+0x298>
 680:	80 0f       	add	r24, r16
 682:	91 1f       	adc	r25, r17
 684:	9a 83       	std	Y+2, r25	; 0x02
 686:	89 83       	std	Y+1, r24	; 0x01
 688:	75 01       	movw	r14, r10
 68a:	e2 18       	sub	r14, r2
 68c:	f3 08       	sbc	r15, r3
 68e:	a1 01       	movw	r20, r2
 690:	40 1b       	sub	r20, r16
 692:	51 0b       	sbc	r21, r17
 694:	e4 16       	cp	r14, r20
 696:	f5 06       	cpc	r15, r21
 698:	0c f4       	brge	.+2      	; 0x69c <qsort+0x220>
 69a:	a7 01       	movw	r20, r14
 69c:	14 16       	cp	r1, r20
 69e:	15 06       	cpc	r1, r21
 6a0:	2c f4       	brge	.+10     	; 0x6ac <qsort+0x230>
 6a2:	b5 01       	movw	r22, r10
 6a4:	64 1b       	sub	r22, r20
 6a6:	75 0b       	sbc	r23, r21
 6a8:	c8 01       	movw	r24, r16
 6aa:	aa de       	rcall	.-684    	; 0x400 <swapfunc>
 6ac:	42 01       	movw	r8, r4
 6ae:	86 18       	sub	r8, r6
 6b0:	97 08       	sbc	r9, r7
 6b2:	49 81       	ldd	r20, Y+1	; 0x01
 6b4:	5a 81       	ldd	r21, Y+2	; 0x02
 6b6:	44 19       	sub	r20, r4
 6b8:	55 09       	sbc	r21, r5
 6ba:	6f 81       	ldd	r22, Y+7	; 0x07
 6bc:	78 85       	ldd	r23, Y+8	; 0x08
 6be:	46 1b       	sub	r20, r22
 6c0:	57 0b       	sbc	r21, r23
 6c2:	84 16       	cp	r8, r20
 6c4:	95 06       	cpc	r9, r21
 6c6:	08 f4       	brcc	.+2      	; 0x6ca <qsort+0x24e>
 6c8:	a4 01       	movw	r20, r8
 6ca:	14 16       	cp	r1, r20
 6cc:	15 06       	cpc	r1, r21
 6ce:	34 f4       	brge	.+12     	; 0x6dc <qsort+0x260>
 6d0:	69 81       	ldd	r22, Y+1	; 0x01
 6d2:	7a 81       	ldd	r23, Y+2	; 0x02
 6d4:	64 1b       	sub	r22, r20
 6d6:	75 0b       	sbc	r23, r21
 6d8:	c5 01       	movw	r24, r10
 6da:	92 de       	rcall	.-732    	; 0x400 <swapfunc>
 6dc:	8f 81       	ldd	r24, Y+7	; 0x07
 6de:	98 85       	ldd	r25, Y+8	; 0x08
 6e0:	8e 15       	cp	r24, r14
 6e2:	9f 05       	cpc	r25, r15
 6e4:	48 f4       	brcc	.+18     	; 0x6f8 <qsort+0x27c>
 6e6:	c7 01       	movw	r24, r14
 6e8:	6f 81       	ldd	r22, Y+7	; 0x07
 6ea:	78 85       	ldd	r23, Y+8	; 0x08
 6ec:	49 d0       	rcall	.+146    	; 0x780 <__udivmodhi4>
 6ee:	96 01       	movw	r18, r12
 6f0:	4f 81       	ldd	r20, Y+7	; 0x07
 6f2:	58 85       	ldd	r21, Y+8	; 0x08
 6f4:	c8 01       	movw	r24, r16
 6f6:	c2 de       	rcall	.-636    	; 0x47c <qsort>
 6f8:	ef 81       	ldd	r30, Y+7	; 0x07
 6fa:	f8 85       	ldd	r31, Y+8	; 0x08
 6fc:	e8 15       	cp	r30, r8
 6fe:	f9 05       	cpc	r31, r9
 700:	58 f5       	brcc	.+86     	; 0x758 <qsort+0x2dc>
 702:	09 81       	ldd	r16, Y+1	; 0x01
 704:	1a 81       	ldd	r17, Y+2	; 0x02
 706:	08 19       	sub	r16, r8
 708:	19 09       	sbc	r17, r9
 70a:	c4 01       	movw	r24, r8
 70c:	bf 01       	movw	r22, r30
 70e:	38 d0       	rcall	.+112    	; 0x780 <__udivmodhi4>
 710:	7b 01       	movw	r14, r22
 712:	be ce       	rjmp	.-644    	; 0x490 <qsort+0x14>
 714:	58 01       	movw	r10, r16
 716:	a8 0e       	add	r10, r24
 718:	b9 1e       	adc	r11, r25
 71a:	8a 14       	cp	r8, r10
 71c:	9b 04       	cpc	r9, r11
 71e:	e0 f4       	brcc	.+56     	; 0x758 <qsort+0x2dc>
 720:	34 01       	movw	r6, r8
 722:	06 15       	cp	r16, r6
 724:	17 05       	cpc	r17, r7
 726:	98 f4       	brcc	.+38     	; 0x74e <qsort+0x2d2>
 728:	73 01       	movw	r14, r6
 72a:	8f 81       	ldd	r24, Y+7	; 0x07
 72c:	98 85       	ldd	r25, Y+8	; 0x08
 72e:	e8 1a       	sub	r14, r24
 730:	f9 0a       	sbc	r15, r25
 732:	b3 01       	movw	r22, r6
 734:	c7 01       	movw	r24, r14
 736:	f6 01       	movw	r30, r12
 738:	09 95       	icall
 73a:	18 16       	cp	r1, r24
 73c:	19 06       	cpc	r1, r25
 73e:	3c f4       	brge	.+14     	; 0x74e <qsort+0x2d2>
 740:	4f 81       	ldd	r20, Y+7	; 0x07
 742:	58 85       	ldd	r21, Y+8	; 0x08
 744:	b7 01       	movw	r22, r14
 746:	c3 01       	movw	r24, r6
 748:	5b de       	rcall	.-842    	; 0x400 <swapfunc>
 74a:	37 01       	movw	r6, r14
 74c:	ea cf       	rjmp	.-44     	; 0x722 <qsort+0x2a6>
 74e:	4f 81       	ldd	r20, Y+7	; 0x07
 750:	58 85       	ldd	r21, Y+8	; 0x08
 752:	84 0e       	add	r8, r20
 754:	95 1e       	adc	r9, r21
 756:	e1 cf       	rjmp	.-62     	; 0x71a <qsort+0x29e>
 758:	28 96       	adiw	r28, 0x08	; 8
 75a:	e2 e1       	ldi	r30, 0x12	; 18
 75c:	41 c0       	rjmp	.+130    	; 0x7e0 <__epilogue_restores__>

0000075e <__mulhi3>:
 75e:	00 24       	eor	r0, r0
 760:	55 27       	eor	r21, r21
 762:	04 c0       	rjmp	.+8      	; 0x76c <__mulhi3+0xe>
 764:	08 0e       	add	r0, r24
 766:	59 1f       	adc	r21, r25
 768:	88 0f       	add	r24, r24
 76a:	99 1f       	adc	r25, r25
 76c:	00 97       	sbiw	r24, 0x00	; 0
 76e:	29 f0       	breq	.+10     	; 0x77a <__mulhi3+0x1c>
 770:	76 95       	lsr	r23
 772:	67 95       	ror	r22
 774:	b8 f3       	brcs	.-18     	; 0x764 <__mulhi3+0x6>
 776:	71 05       	cpc	r23, r1
 778:	b9 f7       	brne	.-18     	; 0x768 <__mulhi3+0xa>
 77a:	80 2d       	mov	r24, r0
 77c:	95 2f       	mov	r25, r21
 77e:	08 95       	ret

00000780 <__udivmodhi4>:
 780:	aa 1b       	sub	r26, r26
 782:	bb 1b       	sub	r27, r27
 784:	51 e1       	ldi	r21, 0x11	; 17
 786:	07 c0       	rjmp	.+14     	; 0x796 <__udivmodhi4_ep>

00000788 <__udivmodhi4_loop>:
 788:	aa 1f       	adc	r26, r26
 78a:	bb 1f       	adc	r27, r27
 78c:	a6 17       	cp	r26, r22
 78e:	b7 07       	cpc	r27, r23
 790:	10 f0       	brcs	.+4      	; 0x796 <__udivmodhi4_ep>
 792:	a6 1b       	sub	r26, r22
 794:	b7 0b       	sbc	r27, r23

00000796 <__udivmodhi4_ep>:
 796:	88 1f       	adc	r24, r24
 798:	99 1f       	adc	r25, r25
 79a:	5a 95       	dec	r21
 79c:	a9 f7       	brne	.-22     	; 0x788 <__udivmodhi4_loop>
 79e:	80 95       	com	r24
 7a0:	90 95       	com	r25
 7a2:	bc 01       	movw	r22, r24
 7a4:	cd 01       	movw	r24, r26
 7a6:	08 95       	ret

000007a8 <__prologue_saves__>:
 7a8:	2f 92       	push	r2
 7aa:	3f 92       	push	r3
 7ac:	4f 92       	push	r4
 7ae:	5f 92       	push	r5
 7b0:	6f 92       	push	r6
 7b2:	7f 92       	push	r7
 7b4:	8f 92       	push	r8
 7b6:	9f 92       	push	r9
 7b8:	af 92       	push	r10
 7ba:	bf 92       	push	r11
 7bc:	cf 92       	push	r12
 7be:	df 92       	push	r13
 7c0:	ef 92       	push	r14
 7c2:	ff 92       	push	r15
 7c4:	0f 93       	push	r16
 7c6:	1f 93       	push	r17
 7c8:	cf 93       	push	r28
 7ca:	df 93       	push	r29
 7cc:	cd b7       	in	r28, 0x3d	; 61
 7ce:	de b7       	in	r29, 0x3e	; 62
 7d0:	ca 1b       	sub	r28, r26
 7d2:	db 0b       	sbc	r29, r27
 7d4:	0f b6       	in	r0, 0x3f	; 63
 7d6:	f8 94       	cli
 7d8:	de bf       	out	0x3e, r29	; 62
 7da:	0f be       	out	0x3f, r0	; 63
 7dc:	cd bf       	out	0x3d, r28	; 61
 7de:	09 94       	ijmp

000007e0 <__epilogue_restores__>:
 7e0:	2a 88       	ldd	r2, Y+18	; 0x12
 7e2:	39 88       	ldd	r3, Y+17	; 0x11
 7e4:	48 88       	ldd	r4, Y+16	; 0x10
 7e6:	5f 84       	ldd	r5, Y+15	; 0x0f
 7e8:	6e 84       	ldd	r6, Y+14	; 0x0e
 7ea:	7d 84       	ldd	r7, Y+13	; 0x0d
 7ec:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ee:	9b 84       	ldd	r9, Y+11	; 0x0b
 7f0:	aa 84       	ldd	r10, Y+10	; 0x0a
 7f2:	b9 84       	ldd	r11, Y+9	; 0x09
 7f4:	c8 84       	ldd	r12, Y+8	; 0x08
 7f6:	df 80       	ldd	r13, Y+7	; 0x07
 7f8:	ee 80       	ldd	r14, Y+6	; 0x06
 7fa:	fd 80       	ldd	r15, Y+5	; 0x05
 7fc:	0c 81       	ldd	r16, Y+4	; 0x04
 7fe:	1b 81       	ldd	r17, Y+3	; 0x03
 800:	aa 81       	ldd	r26, Y+2	; 0x02
 802:	b9 81       	ldd	r27, Y+1	; 0x01
 804:	ce 0f       	add	r28, r30
 806:	d1 1d       	adc	r29, r1
 808:	0f b6       	in	r0, 0x3f	; 63
 80a:	f8 94       	cli
 80c:	de bf       	out	0x3e, r29	; 62
 80e:	0f be       	out	0x3f, r0	; 63
 810:	cd bf       	out	0x3d, r28	; 61
 812:	ed 01       	movw	r28, r26
 814:	08 95       	ret

00000816 <_exit>:
 816:	f8 94       	cli

00000818 <__stop_program>:
 818:	ff cf       	rjmp	.-2      	; 0x818 <__stop_program>
